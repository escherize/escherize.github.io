{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name blindfold.views, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core}, :uses nil, :defs {slider {:protocol-inline nil, :meta {:file "/Users/bcm/dv/blindfold/src/cljs/blindfold/views.cljs", :line 4, :column 7, :end-line 4, :end-column 13, :arglists (quote ([value on-change]))}, :name blindfold.views/slider, :variadic false, :file "src/cljs/blindfold/views.cljs", :end-column 13, :method-params ([value on-change]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([value on-change]))}, main-panel {:protocol-inline nil, :meta {:file "/Users/bcm/dv/blindfold/src/cljs/blindfold/views.cljs", :line 11, :column 7, :end-line 11, :end-column 17, :arglists (quote ([]))}, :name blindfold.views/main-panel, :variadic false, :file "src/cljs/blindfold/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:thead :min :table :text-align :font-size :td :value :edit :tr :assoc-in :width :weights :type :style :div :weight :max :score :attrs :input :items :on-change :border :step :font-family}, :order [:input :type :value :min :max :step :style :on-change :width :items :weights :attrs :div :text-align :font-size :font-family :table :thead :td :tr :border :weight :edit :assoc-in :score]}, :doc nil}