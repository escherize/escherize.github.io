;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name looper.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, re-frame re-frame.core, re-frame.core re-frame.core, looper.handlers looper.handlers, looper.subs looper.subs, views looper.views, looper.views looper.views}, :uses nil, :defs {mount-root {:protocol-inline nil, :meta {:file "/Users/bcm/dv/looper/src/cljs/looper/core.cljs", :line 8, :column 7, :end-line 8, :end-column 17, :arglists (quote ([]))}, :name looper.core/mount-root, :variadic false, :file "src/cljs/looper/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, init {:protocol-inline nil, :meta {:file "/Users/bcm/dv/looper/src/cljs/looper/core.cljs", :line 12, :column 16, :end-line 12, :end-column 20, :export true, :arglists (quote ([]))}, :name looper.core/init, :variadic false, :file "src/cljs/looper/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:initialize-db}, :order [:initialize-db]}, :doc nil}