;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name looper.views, :imports nil, :requires {r reagent.core, reagent.core reagent.core, reader cljs.reader, cljs.reader cljs.reader, re-frame re-frame.core, re-frame.core re-frame.core, jsi looper.js-inits, looper.js-inits looper.js-inits}, :uses {subscribe re-frame.core, dispatch re-frame.core}, :defs {edit-panel-content {:protocol-inline nil, :meta {:file "/Users/bcm/dv/looper/src/cljs/looper/views.cljs", :line 7, :column 7, :end-line 7, :end-column 25, :arglists (quote ([]))}, :name looper.views/edit-panel-content, :variadic false, :file "src/cljs/looper/views.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, safe-read {:protocol-inline nil, :meta {:file "/Users/bcm/dv/looper/src/cljs/looper/views.cljs", :line 28, :column 7, :end-line 28, :end-column 16, :arglists (quote ([s on-success]))}, :name looper.views/safe-read, :variadic false, :file "src/cljs/looper/views.cljs", :end-column 16, :method-params ([s on-success]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s on-success])), :test true}, handle-ace-update {:protocol-inline nil, :meta {:file "/Users/bcm/dv/looper/src/cljs/looper/views.cljs", :line 33, :column 7, :end-line 33, :end-column 24, :arglists (quote ([& [e]])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([e])], :arglists [[& [e]]], :arglists-meta (nil)}}, :name looper.views/handle-ace-update, :variadic true, :file "src/cljs/looper/views.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([e])], :arglists [[& [e]]], :arglists-meta (nil)}, :method-params [([e])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists [[& [e]]], :test true}, edit-panel {:protocol-inline nil, :meta {:file "/Users/bcm/dv/looper/src/cljs/looper/views.cljs", :line 39, :column 7, :end-line 39, :end-column 17, :arglists (quote ([]))}, :name looper.views/edit-panel, :variadic false, :file "src/cljs/looper/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, main-panel {:protocol-inline nil, :meta {:file "/Users/bcm/dv/looper/src/cljs/looper/views.cljs", :line 45, :column 7, :end-line 45, :end-column 17, :arglists (quote ([]))}, :name looper.views/main-panel, :variadic false, :file "src/cljs/looper/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:parsed-data :color :text-align :min-height :component-did-mount :background-color :graph-data :width :style :div :render :code :position :h1 :border :div#editor :p :margin}, :order [:parsed-data :graph-data :div :h1 :style :text-align :color :p :code :div#editor :position :min-height :width :margin :border :background-color :render :component-did-mount]}, :doc nil}