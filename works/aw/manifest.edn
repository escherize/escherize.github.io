[{:module-id :main, :name :main, :output-name "main.js", :entries [awbc.view.main], :depends-on nil, :sources ["goog/base.js" "goog/debug/error.js" "goog/dom/nodetype.js" "goog/asserts/asserts.js" "goog/reflect/reflect.js" "goog/math/long.js" "goog/math/integer.js" "goog/string/internal.js" "goog/string/string.js" "goog/object/object.js" "goog/array/array.js" "goog/structs/structs.js" "goog/functions/functions.js" "goog/math/math.js" "goog/iter/iter.js" "goog/structs/map.js" "goog/uri/utils.js" "goog/uri/uri.js" "goog/string/stringbuffer.js" "cljs/core.cljs" "shadow/js.js" "node_modules/object-assign/index.js" "node_modules/react/cjs/react.production.min.js" "node_modules/react/index.js" "node_modules/scheduler/cjs/scheduler.production.min.js" "node_modules/scheduler/index.js" "node_modules/react-dom/cjs/react-dom.production.min.js" "node_modules/react-dom/index.js" "reagent/debug.cljs" "reagent/interop.cljs" "clojure/string.cljs" "reagent/impl/util.cljs" "clojure/walk.cljs" "node_modules/create-react-class/factory.js" "node_modules/create-react-class/index.js" "reagent/impl/batching.cljs" "clojure/set.cljs" "reagent/ratom.cljs" "reagent/impl/component.cljs" "reagent/impl/template.cljs" "reagent/dom.cljs" "reagent/core.cljs" "goog/debug/entrypointregistry.js" "goog/dom/htmlelement.js" "goog/dom/tagname.js" "goog/labs/useragent/util.js" "goog/labs/useragent/browser.js" "goog/labs/useragent/engine.js" "goog/async/nexttick.js" "re_frame/interop.cljs" "re_frame/db.cljc" "re_frame/loggers.cljc" "re_frame/utils.cljc" "re_frame/registrar.cljc" "re_frame/trace.cljc" "re_frame/interceptor.cljc" "re_frame/events.cljc" "re_frame/subs.cljc" "re_frame/router.cljc" "re_frame/fx.cljc" "re_frame/cofx.cljc" "clojure/data.cljs" "re_frame/std_interceptors.cljc" "re_frame/core.cljc" "borkdude/dynaload.cljc" "malli/sci.cljc" "malli/impl/util.cljc" "malli/impl/regex.cljc" "malli/registry.cljc" "malli/core.cljc" "clojure/test/check/random/longs/bit_count_impl.cljs" "clojure/test/check/random/longs.cljs" "clojure/test/check/random/doubles.cljs" "clojure/test/check/random.cljs" "clojure/test/check/rose_tree.cljc" "clojure/test/check/generators.cljc" "clojure/test/check/results.cljc" "clojure/test/check/impl.cljc" "clojure/test/check.cljc" "clojure/test/check/properties.cljc" "cljs/spec/gen/alpha.cljs" "malli/generator.cljc" "awbc/damage.cljc" "awbc/rules.cljc" "awbc/view/events.cljs" "awbc/view/subs.cljs" "awbc/view/main.cljs" "shadow/module/main/append.js"]}]