{"version":3,"sources":["new_root/core.cljs"],"mappings":"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","names":["js/new-root","js/new-root.core","js/new-root.core.*pointer","new-root.core/*pointer","reagent.core.atom","js/new-root.core.app-state","new-root.core/app-state","new-root.core/link","text","post-id","reitit.frontend.easy.href","new-root.core/post-0","new-root.core/post-1","new-root.paint-snake-two.core/view","new-root.core/post-2","new-root.simple-dag/view","new-root.core/post-3","new-root.paint/view","new-root.core/post-4","new-root.gen-art/view","new-root.core/scratch","new-root.scratch/view","new-root.core/post-5","new-root.neumorph/view","new-root.core/post-6","new-root.gen-art-2/view","new-root.core/post-7","new-root.gen-art-3/view","new-root.core/post-8","new-root.core/post-9","new-root.leds/view","new-root.core/post-10","new-root.weight/view","new-root.core/posts","cljs.core.map","cljs.core.juxt","cljs.core/identity","cljs.core.into","new-root.core/nav","new-root.core/blog","page","p__49894","map__49895","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","new-root.core/teaser","_","id","title","preview","content","no-content","release","new-root.core/btn-style","new-root.core/squirt","x","Math/sqrt","Math/abs","new-root.core/clamp","lo","n","hi","x__4214__auto__","y__4215__auto__","x__4217__auto__","y__4218__auto__","p__49897","map__49898","new-root.core/style-fn","y","h","dist","new-root.core/shadow-box","*pointer","*my-position","reagent.core.create_class","this","cljs.core/reset!","new-root.neumorph/find-location","reagent.dom/dom-node","cljs.core.merge","cljs.core/deref","new-root.neumorph/p1+p2->box-shadow-main","p__49900","map__49901","new-root.core/shadow-teaser","new-root.core/footer","new-root.core/width","js/window.innerWidth","new-root.core/height","js/window.innerHeight","js/console.log","new-root.core/to-scale","range","new-root.core/home-posts","cljs.core/vals","cljs.core.distinct","cljs.core.sort_by","cljs.core/reverse","new-root.core/home","with-let49904","reagent.ratom/with-let-values","temp__5739__auto__","reagent.ratom/*ratom-context*","c__42822__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init49905","p1__49903#","res__42823__auto__","destroy__42821__auto__","reagent.ratom/reactive?","handler","js/document","iter__4529__auto__","s__49907","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__49909","cljs.core/chunk-buffer","i__49908","map__49910","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__49906","cljs.core/chunk-rest","map__49912","cljs.core/first","cljs.core/cons","cljs.core/rest","exclude-post?","p","new-root.core/projects","s__49915","b__49917","i__49916","iter__49914","project","clojure.string/capitalize","new-root.core/post","match","temp__5733__auto__","map__49918","posts","post","or__4126__auto__","js/parseInt","pure?","cljs.core.pr_str","new-root.core/about","new-root.core/routes","cljs.core/int?","new-root.core/current-page","view","new-root.core/start","reagent.dom.render","new-root.core/init","reitit.frontend.easy/start!","reitit.frontend.router","m","cljs.core.swap_BANG_","cljs.core/assoc","new-root.paint-snake-two.core/init","new-root.core/stop","cljs.core/chunk-first"],"sourcesContent":["(ns new-root.core\n  (:require [clojure.string :as str]\n            [new-root.gen-art :as gen-art]\n            [new-root.gen-art-2 :as gen-art2]\n            [new-root.gen-art-3 :as gen-art3]\n            [new-root.leds :as leds]\n            [new-root.weight :as weight]\n            [new-root.neumorph :as neumorph]\n            [new-root.paint :as paint]\n            [new-root.paint-snake-two.core :as ps-two]\n            [new-root.scratch :as scratch]\n            [new-root.simple-dag :as simple-dag]\n            [new-root.relations-grouping :as grouping]\n            [reagent.core :as r]\n            [reagent.dom :as rd]\n            [reitit.frontend :as rfe]\n            [reitit.frontend.easy :as rfee]))\n\n(defonce *pointer (r/atom [301 301]))\n(defonce app-state (r/atom {:thingies 1}))\n\n(defn link [text post-id]\n  [:a {:href (rfee/href ::post {:id post-id})} text])\n\n(def post-0\n  {:id \"hello-world\"\n   :sorder 0\n   :title \"Hello World\"\n   :preview (fn []\n              [:div\n               [:p \"Welcome to my blog!\"]\n               [:p \"It's built as a single page app using\n               Clojurescript and reagent, which means the entire thing is\n               completely programmable. Visit my contents \" (link \"here.\" \"hello-world\")]])\n   :content (fn []\n              [:div\n               [:h1 \"I'm here, and im post 0.\"]\n               [:p \"Here's \" (link \"Post 1\" \"snake-game\") \".\"]\n               [:p \"Its a game I'm working on!\"]])})\n(def post-1\n  {:id \"snake-game\"\n   :sorder 1\n   :title \"Adding goals and a way to die\"\n   :preview (fn [] [:div \"This is a riff on snake\"])\n   :content ps-two/view})\n\n(def post-2\n  {:id \"force-graph\"\n   :sorder 2\n   :title \"Force Directed Graph\"\n   :preview (fn [] [:div \"An updatable d3 Force Directed Graph.\"])\n   :content simple-dag/view})\n\n(def post-3\n  {:id \"paint\"\n   :sorder 3\n   :title \"Paint fill game\"\n   :pure true\n   :preview (fn []\n              [:div\n               [:p \"Inspired by a python game I found on my raspberry pi\"]\n               [:p \"Flood the canvas from the top left\"]])\n   :content paint/view})\n\n(def post-4\n  {:id \"gen-art\"\n   :sorder 4\n   :title \"Generative Art\"\n   :pure true\n   :preview (fn [] [:div \"Just getting warmed up\"])\n   :content gen-art/view})\n\n(def scratch\n  {:id \"scratch\"\n   :title \"scratch\"\n   :exclude-post? true\n   :pure true\n   :preview (fn [] [:div])\n   :content scratch/view})\n\n(def post-5\n  {:id \"neumorph\"\n   :sorder 5\n   :title \"Dynamic Neumorphism\"\n   :pure false\n   :preview (fn [] [:div \"Yeah.. it's \"(link \"trendy\" \"neumorph\") \".\"])\n   :content neumorph/view})\n\n(def post-6\n  {:id \"gen-art-2\"\n   :sorder 6\n   :title \"More Art\"\n   :pure true\n   :preview (fn [] [:div \"Where circles don't overlap\"])\n   :content gen-art2/view})\n\n(def post-7\n  {:id \"gen-art-3\"\n   :sorder 7\n   :title \"Even More Art\"\n   :pure true\n   :preview (fn [] [:div \"Vector Fields 101\"])\n   :content gen-art3/view})\n\n(def post-8\n  {:id \"pico8\"\n   :sorder 8\n   :title \"Pico-8\"\n   :pure true\n   :no-content true\n   :preview (fn []\n              [:div\n               \"To play, use the arrow keys and z, and x. \"\n               \"They also work on mobile.\"\n               [:ul\n                [:li>a {:style {:font-size 20}\n                        :href \"/works/pico8/tetris_attack\"} \"Tetris Attack v1.1\"]\n                [:li>a {:style {:font-size 18}\n                        :href \"/works/pico8/ammo_thruster\"} \"Ammo Thruster v0.9\"]\n                [:li>a {:style {:font-size 16}\n                        :href \"/works/pico8/sliding_tiles\"} \"Sliding Tiles v0.4\"]\n                [:li>a {:style {:font-size 14}\n                        :href \"/works/pico8/gunner_men\"} \"Gunner Men 0.1\"]]])})\n\n(def post-9\n  {:id \"light-strips\"\n   :sorder 9\n   :title \"Working with LED Strips\"\n   :pure true\n   :preview (fn [] \"Setting up a low-fi LED display, and accessing 2d arrays\")\n   :content leds/view})\n\n(def post-10\n  {:id \"weights\"\n   :sorder 10\n   :title \"Barbell Calculator\"\n   :pure true\n   :preview (fn [] \"Quickly visualize what to put on your bar\")\n   :content weight/view})\n\n(defn posts []\n  (->> [post-0 post-1 post-2 post-3 post-4 post-5 post-6\n        ;; fucked up idk why :D\n        ;; post-7\n        post-8\n        post-9\n        post-10\n        scratch]\n       (map (juxt :id identity))\n       (into {})))\n\n(defn nav []\n  [:div {:style {:width \"200px\" :margin \"auto\"}}\n   [:span {:key \"home\"\n           :style {:margin-right \"20px\"}} [:a {:href (rfee/href ::home)} \"Home\"]]\n   [:span {:key \"projects\"}\n    [:a {:href (rfee/href ::projects)} \"Projects\"]]\n   #_(repeat (:thingies @app-state) \"  |  \")\n   #_[:span [:a {:href (rfee/href ::about)} \"About\"]]])\n\n(defn blog [page]\n  (into\n   [:div.container\n    [:div.row [nav]]\n    [:div.row page]]))\n\n(defn teaser [{:as _ :keys [id title preview content no-content release]}]\n  [:div.teaser-card\n   {:style {:margin \"30px\"\n            :padding \"10px 20px 20px 30px\"}}\n   [:h3 (if no-content\n          title\n          (link title id))]\n   [:div.row (cond preview [preview]\n                   content [content]\n                   :else [:h2 title])]])\n\n(def btn-style\n  {:margin \"25px\"\n   :background-color \"#dde\"\n   :text-align \"center\"\n   :border \"5px rgb(12, 112, 160) solid\"\n   :border-radius 10\n   :padding \"30px\"})\n\n(defn squirt [x]\n  (if (> x 0)\n    (Math/sqrt (Math/abs x))\n    (* -1 (Math/sqrt (Math/abs x)))))\n\n(defn clamp [lo n hi]\n  (->> n (max lo) (min hi)))\n\n(defn style-fn [{:keys [x y h #_unit-x #_unit-y]}]\n  (let [dist (Math/sqrt (+ (* x x) (* y y)))]\n    {:box-shadow (str (* 0.8 (squirt x)) \"px \"\n                      (* 0.8 (squirt y)) \"px \"\n                      (/ h 100) \"px \" ;; blur\n                      (/ h 80) \"px \" ;; spread\n                      \"#aab\"\n                      ;; changing colors like:\n                      #_(str \"hsl(\" (/ h 5) \",50%,65%)\"))\n     ;; changing colors?\n     ;; get brigher when mouse closer\n     :background-color (str \"hsl(-130,40%,\" (max (- 95 (/ h 100)) 85) \"%)\")}))\n\n(defn shadow-box [*pointer content]\n  (let [*my-position (r/atom [])]\n    (r/create-class\n     {:component-did-mount\n      (fn [this] (reset! *my-position (neumorph/find-location (rd/dom-node this))))\n      :reagent-render\n      (fn [*pointer content]\n        [:div\n         {:style (merge\n                  btn-style\n                  (when @*my-position\n                    (style-fn\n                     (neumorph/p1+p2->box-shadow-main\n                      @*pointer\n                      @*my-position))))}\n         content\n         #_[:<>\n            [:p \"origin: \" (pr-str @*pointer)]\n            [:p \"my position: \" (pr-str @*my-position)]]])})))\n\n(defn shadow-teaser\n  [*pointer\n   {:as _ :keys [id title preview no-content content release]}]\n  (let [*my-position (r/atom [])]\n    (r/create-class\n     {:component-did-mount\n      (fn [this] (reset! *my-position (neumorph/find-location (rd/dom-node this))))\n      :reagent-render\n      (fn [*pointer content]\n        [:div.shadow-teaser\n         {:style (merge\n                  {:margin \"30px 25px\"\n                   :background-color \"#dde\"\n                   :text-align \"center\"\n                   :border \"8px rgb(21, 121, 169) solid\"\n                   :border-radius \"20px\"\n                   :max-width \"300px\"\n                   :padding \"20px\"}\n                  (when @*my-position\n                    (style-fn\n                     (neumorph/p1+p2->box-shadow-main @*pointer @*my-position))))}\n         [:div\n          [:h3 (if no-content\n                 title\n                 (link title id))]\n          [:div.row (cond preview [preview]\n                          content [content]\n                          :else [:h2 title])]]\n         (when false\n           [:<>\n            [:p \"origin: \" (pr-str @*pointer)]\n            [:p \"my position: \" (pr-str @*my-position)]])])})))\n\n(defn footer []\n  [:div {:style {:height 100}}])\n\n(defn width [] js/window.innerWidth)\n(defn height [] js/window.innerHeight)\n\n(js/console.log \"width:\" (width))\n(js/console.log \"height:\" (height))\n\n(defn to-scale [range n]\n  (+ (* range 0.45) (* range n 0.35)))\n\n(defn home-posts []\n  (->> (posts) vals distinct (sort-by :sorder) reverse))\n\n(defn home [_]\n  (r/with-let [handler #(reset! *pointer [(.-pageX %) (.-pageY %)])\n               _ (.addEventListener js/document \"mousemove\" handler)]\n    (fn []\n      [:div\n       [:div.top {:style {:margin-top \"30px\"\n                          :margin-bottom \"30px\"}}\n        [:div {:style {:width \"300px\"\n                       :margin \"auto\"}}\n         [:h1 \"Escherize Zone\"]]\n        [nav]]\n       (into [:div {:style {:display \"flex\"\n                            :flex-flow \"wrap\"\n                            :justify-content \"space-evenly\"}}]\n             (for [{:keys [exclude-post?] :as p} (home-posts)]\n               ;; (teaser p)\n               (when-not exclude-post? [shadow-teaser *pointer p])))\n       [footer]])\n    (finally\n      (.removeEventListener js/document \"mousemove\" handler))))\n\n(defn projects []\n  [:div\n   [:h3 \"Here are some projects and toys going back to 2012.\"]\n   (into [:ul]\n         (for [project [\"blindfold\" \"catan\" \"circles\" \"cljsfiddle\"\n                        \"colors\" \"dnd5\" \"hiccup.space\" \"looper\"\n                        \"magic\" \"santorini\" \"transpose\"]]\n           [:li>a {:href (str \"/works/\" project)}\n            (str/capitalize project)]))])\n\n(defn post [match]\n  (if-let [id (-> match :parameters :path :id)]\n    (let [posts (posts)\n          {:keys [content title] :as post} (or (get posts id)\n                                               (get posts (js/parseInt id)))\n          pure? (:pure post)]\n      (if pure?\n        [content]\n        [:div\n         [:div.row\n          [:div [:span \"[\" [:a {:href (rfee/href ::home)} \"Home\"] \"]\"]]\n          [:div [:h1 title]]]\n         [:hr]\n         [content]]))\n    [:pre (pr-str match)]))\n\n(defn about [_]\n  [:h1 \"under construction\"])\n\n(def routes\n  [[\"/\" {:name ::home :view (fn [] home)}]\n   [\"/projects\" {:name ::projects :view (fn [] projects)}]\n   [\"/about\" {:name ::about :view (fn [] about)}]\n   [\"/post/:id\" {:name ::post\n                 :view (fn [] post)\n                 :parameters {:path {:id int?}}}]])\n\n(defn current-page []\n  [:div\n   (if (:match @app-state)\n     (let [view (:view (:data (:match @app-state)))]\n       [view (:match @app-state)]))])\n\n(defn ^:dev/after-load start []\n  (js/console.log \"starting..\")\n  ;;(.resize (js/$ js/window) (fn [] (js/console.log \"changed\")))\n  (rd/render [current-page] (. js/document (getElementById \"app\"))))\n\n(defn ^:export init []\n  ;; init is called ONCE when the page loads\n  ;; this is called in the index.html and must be exported\n  ;; so it is available even in :advanced release builds\n  (rfee/start!\n   (rfe/router routes)\n   (fn [m] (swap! app-state assoc :match m))\n   ;; set to false to enable HistoryAPI\n   {:use-fragment true})\n  ;;(ps/init)\n  (ps-two/init)\n  (start))\n\n(defn stop []\n  ;; stop is called before any code is reloaded\n  ;; this is controlled by :before-load in the config\n  (js/console.log \"stop\"))\n"]}