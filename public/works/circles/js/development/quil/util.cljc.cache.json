["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "],"~$Processing",["^ ","~$prototype",["^ ","~$PConstants",["^ "]]]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$quil.util","~:imports",null,"~:requires",["^ ","~$cstr","~$clojure.string","^?","^?"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$clj-compilation?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/brmaass/dv/circles/resources/public/js/development/quil/util.cljc","~:line",71,"~:column",7,"~:end-line",71,"~:end-column",23,"~:arglists",["~#list",["~$quote",["^L",[[]]]]]],"^:","~$quil.util/clj-compilation?","~:variadic",false,"^F","resources/public/js/development/quil/util.cljc","^J",23,"~:method-params",["^L",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^L",[null,null]],"^H",1,"^G",71,"^I",71,"~:max-fixed-arity",0,"~:fn-var",true,"^K",["^L",["^M",["^L",[[]]]]]],"~$make-quil-constant-map",["^ ","^D",null,"^E",["^ ","^F","/Users/brmaass/dv/circles/resources/public/js/development/quil/util.cljc","^G",97,"^H",7,"^I",97,"^J",29,"^K",["^L",["^M",["^L",[["~$target","~$const-map-name","~$const-map"]]]]]],"^:","~$quil.util/make-quil-constant-map","^O",false,"^F","resources/public/js/development/quil/util.cljc","^J",29,"^P",["^L",[["^V","^W","^X"]]],"^Q",null,"^R",["^L",[null,null]],"^H",1,"^G",97,"^I",97,"^S",3,"^T",true,"^K",["^L",["^M",["^L",[["^V","^W","^X"]]]]]],"~$print-definition-list",["^ ","^D",null,"^E",["^ ","^F","/Users/brmaass/dv/circles/resources/public/js/development/quil/util.cljc","^G",60,"^H",7,"^I",60,"^J",28,"^K",["^L",["^M",["^L",[["~$definitions"]]]]]],"^:","~$quil.util/print-definition-list","^O",false,"^F","resources/public/js/development/quil/util.cljc","^J",28,"^P",["^L",[["^["]]],"^Q",null,"^R",["^L",[null,null]],"^H",1,"^G",60,"^I",60,"^S",1,"^T",true,"^K",["^L",["^M",["^L",[["^["]]]]]],"~$generate-quil-constants",["^ ","^D",null,"^E",["^ ","^F","/Users/brmaass/dv/circles/resources/public/js/development/quil/util.cljc","^G",104,"^H",11,"^I",104,"^J",34,"~:macro",true,"^K",["^L",["^M",["^L",[["^V","~$&","~$opts"]]]]],"~:top-fn",["^ ","^O",true,"^S",3,"^P",[["^L",["~$&form","~$&env","^V","^13"]]],"^K",["^L",[["^15","^16","^V","~$&","^13"]]],"^R",["^L",[null]]]],"^:","~$quil.util/generate-quil-constants","^O",true,"^F","resources/public/js/development/quil/util.cljc","^J",34,"^14",["^ ","^O",true,"^S",3,"^P",[["^L",["^15","^16","^V","^13"]]],"^K",["^L",[["^15","^16","^V","~$&","^13"]]],"^R",["^L",[null]]],"^P",[["^L",["^15","^16","^V","^13"]]],"^Q",null,"^R",["^L",[null]],"^H",1,"^G",104,"^12",true,"^I",104,"^S",3,"^T",false,"^K",["^L",[["^15","^16","^V","~$&","^13"]]]],"~$resolve-constant-key",["^ ","^D",null,"^E",["^ ","^F","/Users/brmaass/dv/circles/resources/public/js/development/quil/util.cljc","^G",27,"^H",7,"^I",27,"^J",27,"^K",["^L",["^M",["^L",[["~$key","~$mappings"]]]]],"~:doc","Returns the val associated with key in mappings or key directly if it\n  is one of the vals in mappings. Otherwise throws an exception."],"^:","~$quil.util/resolve-constant-key","^O",false,"^F","resources/public/js/development/quil/util.cljc","^J",27,"^P",["^L",[["^19","^1:"]]],"^Q",null,"^R",["^L",[null,null]],"^H",1,"^G",27,"^I",27,"^S",2,"^T",true,"^K",["^L",["^M",["^L",[["^19","^1:"]]]]],"^1;","Returns the val associated with key in mappings or key directly if it\n  is one of the vals in mappings. Otherwise throws an exception."],"~$no-fn",["^ ","^D",null,"^E",["^ ","^F","/Users/brmaass/dv/circles/resources/public/js/development/quil/util.cljc","^G",5,"^H",7,"^I",5,"^J",12,"^K",["^L",["^M",["^L",[[]]]]],"^1;","Function that does nothing."],"^:","~$quil.util/no-fn","^O",false,"^F","resources/public/js/development/quil/util.cljc","^J",12,"^P",["^L",[[]]],"^Q",null,"^R",["^L",[null,null]],"^H",1,"^G",5,"^I",5,"^S",0,"^T",true,"^K",["^L",["^M",["^L",[[]]]]],"^1;","Function that does nothing."],"~$prepare-quil-clj-constants",["^ ","^D",null,"^E",["^ ","^F","/Users/brmaass/dv/circles/resources/public/js/development/quil/util.cljc","^G",85,"^H",7,"^I",85,"^J",33,"^K",["^L",["^M",["^L",[["~$constants"]]]]]],"^:","~$quil.util/prepare-quil-clj-constants","^O",false,"^F","resources/public/js/development/quil/util.cljc","^J",33,"^P",["^L",[["^1@"]]],"^Q",null,"^R",["^L",[null,null]],"^H",1,"^G",85,"^I",85,"^S",1,"^T",true,"^K",["^L",["^M",["^L",[["^1@"]]]]]],"~$prepare-quil-cljs-constants",["^ ","^D",null,"^E",["^ ","^F","/Users/brmaass/dv/circles/resources/public/js/development/quil/util.cljc","^G",91,"^H",7,"^I",91,"^J",34,"^K",["^L",["^M",["^L",[["^1@"]]]]]],"^:","~$quil.util/prepare-quil-cljs-constants","^O",false,"^F","resources/public/js/development/quil/util.cljc","^J",34,"^P",["^L",[["^1@"]]],"^Q",null,"^R",["^L",[null,null]],"^H",1,"^G",91,"^I",91,"^S",1,"^T",true,"^K",["^L",["^M",["^L",[["^1@"]]]]]],"~$length-of-longest-key",["^ ","^D",null,"^E",["^ ","^F","/Users/brmaass/dv/circles/resources/public/js/development/quil/util.cljc","^G",39,"^H",8,"^I",39,"^J",29,"~:private",true,"^K",["^L",["^M",["^L",[["~$m"]]]]],"^1;","Returns the length of the longest key of map m. Assumes m's keys are strings\n   and returns 0 if map is empty:\n   (length-of-longest-key {\"foo\" 1 \"barr\" 2 \"bazzz\" 3}) ;=> 5\n   (length-of-longest-key {}) ;=> 0"],"^1E",true,"^:","~$quil.util/length-of-longest-key","^O",false,"^F","resources/public/js/development/quil/util.cljc","^J",29,"^P",["^L",[["~$m"]]],"^Q",null,"^R",["^L",[null,null]],"^H",1,"^G",39,"^I",39,"^S",1,"^T",true,"^K",["^L",["^M",["^L",[["~$m"]]]]],"^1;","Returns the length of the longest key of map m. Assumes m's keys are strings\n   and returns 0 if map is empty:\n   (length-of-longest-key {\"foo\" 1 \"barr\" 2 \"bazzz\" 3}) ;=> 5\n   (length-of-longest-key {}) ;=> 0"],"~$gen-padding",["^ ","^D",null,"^E",["^ ","^F","/Users/brmaass/dv/circles/resources/public/js/development/quil/util.cljc","^G",48,"^H",8,"^I",48,"^J",19,"^1E",true,"^K",["^L",["^M",["^L",[["~$len"],["^1H","~$pad"],["~$s","^1H","^1I"]]]]],"^1;","Generates a padding string starting concatting s with len times pad:\n   (gen-padding \"\" 5 \"b\") ;=> \"bbbbb\"\n   May be called without starting string s in which case it defaults to the\n   empty string and also without pad in which case it defaults to a single space","^14",["^ ","^O",false,"^S",3,"^P",["^L",[["^1H"],["^1H","^1I"],["~$s","^1H","^1I"]]],"^K",["^L",[["^1H"],["^1H","^1I"],["~$s","^1H","^1I"]]],"^R",["^L",[null,null,null]]]],"^1E",true,"^:","~$quil.util/gen-padding","^O",false,"^F","resources/public/js/development/quil/util.cljc","^J",19,"^14",["^ ","^O",false,"^S",3,"^P",["^L",[["^1H"],["^1H","^1I"],["~$s","^1H","^1I"]]],"^K",["^L",[["^1H"],["^1H","^1I"],["~$s","^1H","^1I"]]],"^R",["^L",[null,null,null]]],"^P",["^L",[["^1H"],["^1H","^1I"],["~$s","^1H","^1I"]]],"^Q",null,"^R",["^L",[null,null,null]],"^H",1,"^G",48,"^I",48,"^S",3,"^T",true,"^K",["^L",[["^1H"],["^1H","^1I"],["~$s","^1H","^1I"]]],"^1;","Generates a padding string starting concatting s with len times pad:\n   (gen-padding \"\" 5 \"b\") ;=> \"bbbbb\"\n   May be called without starting string s in which case it defaults to the\n   empty string and also without pad in which case it defaults to a single space"],"~$prepare-quil-name",["^ ","^D",null,"^E",["^ ","^F","/Users/brmaass/dv/circles/resources/public/js/development/quil/util.cljc","^G",80,"^H",7,"^I",80,"^J",24,"^K",["^L",["^M",["^L",[["~$const-keyword"]]]]]],"^:","~$quil.util/prepare-quil-name","^O",false,"^F","resources/public/js/development/quil/util.cljc","^J",24,"^P",["^L",[["^1L"]]],"^Q",null,"^R",["^L",[null,null]],"^H",1,"^G",80,"^I",80,"^S",1,"^T",true,"^K",["^L",["^M",["^L",[["^1L"]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^9",["~:else","~$do","~$js/Processing.prototype.PConstants","~:clj","~$cljs.core/aget","~$def"]],"~:order",["^1R","^1V","^1T","^1W","^1U","^1S"]],"^1;","Utility fns"]