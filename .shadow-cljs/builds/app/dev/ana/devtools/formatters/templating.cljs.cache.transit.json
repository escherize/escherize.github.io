["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.templating');\ngoog.require('cljs.core');\ngoog.require('clojure.walk');\ngoog.require('devtools.util');\ngoog.require('devtools.protocols');\ngoog.require('devtools.formatters.helpers');\ngoog.require('devtools.formatters.state');\ngoog.require('clojure.string');\ndevtools.formatters.templating.mark_as_group_BANG_ = (function devtools$formatters$templating$mark_as_group_BANG_(value){\nvar x28714_28831 = value;\nx28714_28831.devtools$protocols$IGroup$ = cljs.core.PROTOCOL_SENTINEL;\n\n\nreturn value;\n});\ndevtools.formatters.templating.group_QMARK_ = (function devtools$formatters$templating$group_QMARK_(value){\nif((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$protocols$IGroup$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IGroup,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IGroup,value);\n}\n});\ndevtools.formatters.templating.mark_as_template_BANG_ = (function devtools$formatters$templating$mark_as_template_BANG_(value){\nvar x28719_28832 = value;\nx28719_28832.devtools$protocols$ITemplate$ = cljs.core.PROTOCOL_SENTINEL;\n\n\nreturn value;\n});\ndevtools.formatters.templating.template_QMARK_ = (function devtools$formatters$templating$template_QMARK_(value){\nif((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$protocols$ITemplate$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ITemplate,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ITemplate,value);\n}\n});\ndevtools.formatters.templating.mark_as_surrogate_BANG_ = (function devtools$formatters$templating$mark_as_surrogate_BANG_(value){\nvar x28729_28833 = value;\nx28729_28833.devtools$protocols$ISurrogate$ = cljs.core.PROTOCOL_SENTINEL;\n\n\nreturn value;\n});\ndevtools.formatters.templating.surrogate_QMARK_ = (function devtools$formatters$templating$surrogate_QMARK_(value){\nif((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$protocols$ISurrogate$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ISurrogate,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ISurrogate,value);\n}\n});\ndevtools.formatters.templating.reference_QMARK_ = (function devtools$formatters$templating$reference_QMARK_(value){\nreturn ((devtools.formatters.templating.group_QMARK_(value)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((value[(0)]),\"object\")));\n});\ndevtools.formatters.templating.make_group = (function devtools$formatters$templating$make_group(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___28834 = arguments.length;\nvar i__4731__auto___28835 = (0);\nwhile(true){\nif((i__4731__auto___28835 < len__4730__auto___28834)){\nargs__4736__auto__.push((arguments[i__4731__auto___28835]));\n\nvar G__28836 = (i__4731__auto___28835 + (1));\ni__4731__auto___28835 = G__28836;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\ndevtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic = (function (items){\nvar group = devtools.formatters.templating.mark_as_group_BANG_([]);\nvar seq__28737_28837 = cljs.core.seq(items);\nvar chunk__28738_28838 = null;\nvar count__28739_28839 = (0);\nvar i__28740_28840 = (0);\nwhile(true){\nif((i__28740_28840 < count__28739_28839)){\nvar item_28841 = chunk__28738_28838.cljs$core$IIndexed$_nth$arity$2(null,i__28740_28840);\nif((!((item_28841 == null)))){\nif(cljs.core.coll_QMARK_(item_28841)){\n(group[\"push\"]).apply(group,devtools.formatters.templating.mark_as_group_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(item_28841)));\n} else {\ngroup.push(devtools.formatters.helpers.pref(item_28841));\n}\n} else {\n}\n\n\nvar G__28842 = seq__28737_28837;\nvar G__28843 = chunk__28738_28838;\nvar G__28844 = count__28739_28839;\nvar G__28845 = (i__28740_28840 + (1));\nseq__28737_28837 = G__28842;\nchunk__28738_28838 = G__28843;\ncount__28739_28839 = G__28844;\ni__28740_28840 = G__28845;\ncontinue;\n} else {\nvar temp__5720__auto___28846 = cljs.core.seq(seq__28737_28837);\nif(temp__5720__auto___28846){\nvar seq__28737_28847__$1 = temp__5720__auto___28846;\nif(cljs.core.chunked_seq_QMARK_(seq__28737_28847__$1)){\nvar c__4550__auto___28848 = cljs.core.chunk_first(seq__28737_28847__$1);\nvar G__28849 = cljs.core.chunk_rest(seq__28737_28847__$1);\nvar G__28850 = c__4550__auto___28848;\nvar G__28851 = cljs.core.count(c__4550__auto___28848);\nvar G__28852 = (0);\nseq__28737_28837 = G__28849;\nchunk__28738_28838 = G__28850;\ncount__28739_28839 = G__28851;\ni__28740_28840 = G__28852;\ncontinue;\n} else {\nvar item_28853 = cljs.core.first(seq__28737_28847__$1);\nif((!((item_28853 == null)))){\nif(cljs.core.coll_QMARK_(item_28853)){\n(group[\"push\"]).apply(group,devtools.formatters.templating.mark_as_group_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(item_28853)));\n} else {\ngroup.push(devtools.formatters.helpers.pref(item_28853));\n}\n} else {\n}\n\n\nvar G__28854 = cljs.core.next(seq__28737_28847__$1);\nvar G__28855 = null;\nvar G__28856 = (0);\nvar G__28857 = (0);\nseq__28737_28837 = G__28854;\nchunk__28738_28838 = G__28855;\ncount__28739_28839 = G__28856;\ni__28740_28840 = G__28857;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn group;\n});\n\ndevtools.formatters.templating.make_group.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\ndevtools.formatters.templating.make_group.cljs$lang$applyTo = (function (seq28732){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq28732));\n});\n\ndevtools.formatters.templating.make_template = (function devtools$formatters$templating$make_template(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___28864 = arguments.length;\nvar i__4731__auto___28865 = (0);\nwhile(true){\nif((i__4731__auto___28865 < len__4730__auto___28864)){\nargs__4736__auto__.push((arguments[i__4731__auto___28865]));\n\nvar G__28866 = (i__4731__auto___28865 + (1));\ni__4731__auto___28865 = G__28866;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic = (function (tag,style,children){\nvar tag__$1 = devtools.formatters.helpers.pref(tag);\nvar style__$1 = devtools.formatters.helpers.pref(style);\nvar template = devtools.formatters.templating.mark_as_template_BANG_([tag__$1,((cljs.core.empty_QMARK_(style__$1))?({}):({\"style\": style__$1}))]);\nvar seq__28761_28872 = cljs.core.seq(children);\nvar chunk__28762_28873 = null;\nvar count__28763_28874 = (0);\nvar i__28764_28875 = (0);\nwhile(true){\nif((i__28764_28875 < count__28763_28874)){\nvar child_28876 = chunk__28762_28873.cljs$core$IIndexed$_nth$arity$2(null,i__28764_28875);\nif((!((child_28876 == null)))){\nif(cljs.core.coll_QMARK_(child_28876)){\n(template[\"push\"]).apply(template,devtools.formatters.templating.mark_as_template_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,child_28876))));\n} else {\nvar temp__5718__auto___28877 = devtools.formatters.helpers.pref(child_28876);\nif(cljs.core.truth_(temp__5718__auto___28877)){\nvar child_value_28878 = temp__5718__auto___28877;\ntemplate.push(child_value_28878);\n} else {\n}\n}\n} else {\n}\n\n\nvar G__28879 = seq__28761_28872;\nvar G__28880 = chunk__28762_28873;\nvar G__28881 = count__28763_28874;\nvar G__28882 = (i__28764_28875 + (1));\nseq__28761_28872 = G__28879;\nchunk__28762_28873 = G__28880;\ncount__28763_28874 = G__28881;\ni__28764_28875 = G__28882;\ncontinue;\n} else {\nvar temp__5720__auto___28884 = cljs.core.seq(seq__28761_28872);\nif(temp__5720__auto___28884){\nvar seq__28761_28887__$1 = temp__5720__auto___28884;\nif(cljs.core.chunked_seq_QMARK_(seq__28761_28887__$1)){\nvar c__4550__auto___28889 = cljs.core.chunk_first(seq__28761_28887__$1);\nvar G__28891 = cljs.core.chunk_rest(seq__28761_28887__$1);\nvar G__28892 = c__4550__auto___28889;\nvar G__28893 = cljs.core.count(c__4550__auto___28889);\nvar G__28894 = (0);\nseq__28761_28872 = G__28891;\nchunk__28762_28873 = G__28892;\ncount__28763_28874 = G__28893;\ni__28764_28875 = G__28894;\ncontinue;\n} else {\nvar child_28897 = cljs.core.first(seq__28761_28887__$1);\nif((!((child_28897 == null)))){\nif(cljs.core.coll_QMARK_(child_28897)){\n(template[\"push\"]).apply(template,devtools.formatters.templating.mark_as_template_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,child_28897))));\n} else {\nvar temp__5718__auto___28899 = devtools.formatters.helpers.pref(child_28897);\nif(cljs.core.truth_(temp__5718__auto___28899)){\nvar child_value_28900 = temp__5718__auto___28899;\ntemplate.push(child_value_28900);\n} else {\n}\n}\n} else {\n}\n\n\nvar G__28901 = cljs.core.next(seq__28761_28887__$1);\nvar G__28902 = null;\nvar G__28903 = (0);\nvar G__28904 = (0);\nseq__28761_28872 = G__28901;\nchunk__28762_28873 = G__28902;\ncount__28763_28874 = G__28903;\ni__28764_28875 = G__28904;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn template;\n});\n\ndevtools.formatters.templating.make_template.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ndevtools.formatters.templating.make_template.cljs$lang$applyTo = (function (seq28751){\nvar G__28752 = cljs.core.first(seq28751);\nvar seq28751__$1 = cljs.core.next(seq28751);\nvar G__28753 = cljs.core.first(seq28751__$1);\nvar seq28751__$2 = cljs.core.next(seq28751__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__28752,G__28753,seq28751__$2);\n});\n\ndevtools.formatters.templating.concat_templates_BANG_ = (function devtools$formatters$templating$concat_templates_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___28908 = arguments.length;\nvar i__4731__auto___28909 = (0);\nwhile(true){\nif((i__4731__auto___28909 < len__4730__auto___28908)){\nargs__4736__auto__.push((arguments[i__4731__auto___28909]));\n\nvar G__28911 = (i__4731__auto___28909 + (1));\ni__4731__auto___28909 = G__28911;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (template,templates){\nreturn devtools.formatters.templating.mark_as_template_BANG_((template[\"concat\"]).apply(template,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.into_array,cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,templates)))));\n});\n\ndevtools.formatters.templating.concat_templates_BANG_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ndevtools.formatters.templating.concat_templates_BANG_.cljs$lang$applyTo = (function (seq28781){\nvar G__28782 = cljs.core.first(seq28781);\nvar seq28781__$1 = cljs.core.next(seq28781);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__28782,seq28781__$1);\n});\n\ndevtools.formatters.templating.extend_template_BANG_ = (function devtools$formatters$templating$extend_template_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___28916 = arguments.length;\nvar i__4731__auto___28917 = (0);\nwhile(true){\nif((i__4731__auto___28917 < len__4730__auto___28916)){\nargs__4736__auto__.push((arguments[i__4731__auto___28917]));\n\nvar G__28921 = (i__4731__auto___28917 + (1));\ni__4731__auto___28917 = G__28921;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.templating.extend_template_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.templating.extend_template_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (template,args){\nreturn devtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic(template,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));\n});\n\ndevtools.formatters.templating.extend_template_BANG_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ndevtools.formatters.templating.extend_template_BANG_.cljs$lang$applyTo = (function (seq28783){\nvar G__28784 = cljs.core.first(seq28783);\nvar seq28783__$1 = cljs.core.next(seq28783);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__28784,seq28783__$1);\n});\n\ndevtools.formatters.templating.make_surrogate = (function devtools$formatters$templating$make_surrogate(var_args){\nvar G__28791 = arguments.length;\nswitch (G__28791) {\ncase 1:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ndevtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$1 = (function (object){\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2(object,null);\n});\n\ndevtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2 = (function (object,header){\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3(object,header,null);\n});\n\ndevtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3 = (function (object,header,body){\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4(object,header,body,(0));\n});\n\ndevtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4 = (function (object,header,body,start_index){\nreturn devtools.formatters.templating.mark_as_surrogate_BANG_((function (){var obj28793 = ({\"target\":object,\"header\":header,\"body\":body,\"startIndex\":(function (){var or__4131__auto__ = start_index;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn (0);\n}\n})()});\nreturn obj28793;\n})());\n});\n\ndevtools.formatters.templating.make_surrogate.cljs$lang$maxFixedArity = 4;\n\ndevtools.formatters.templating.get_surrogate_target = (function devtools$formatters$templating$get_surrogate_target(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"target\"]);\n});\ndevtools.formatters.templating.get_surrogate_header = (function devtools$formatters$templating$get_surrogate_header(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"header\"]);\n});\ndevtools.formatters.templating.get_surrogate_body = (function devtools$formatters$templating$get_surrogate_body(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"body\"]);\n});\ndevtools.formatters.templating.get_surrogate_start_index = (function devtools$formatters$templating$get_surrogate_start_index(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"startIndex\"]);\n});\ndevtools.formatters.templating.make_reference = (function devtools$formatters$templating$make_reference(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___28935 = arguments.length;\nvar i__4731__auto___28941 = (0);\nwhile(true){\nif((i__4731__auto___28941 < len__4730__auto___28935)){\nargs__4736__auto__.push((arguments[i__4731__auto___28941]));\n\nvar G__28942 = (i__4731__auto___28941 + (1));\ni__4731__auto___28941 = G__28942;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.templating.make_reference.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.templating.make_reference.cljs$core$IFn$_invoke$arity$variadic = (function (object,p__28800){\nvar vec__28803 = p__28800;\nvar state_override_fn = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28803,(0),null);\nif((((state_override_fn == null)) || (cljs.core.fn_QMARK_(state_override_fn)))){\n} else {\nthrow (new Error(\"Assert failed: (or (nil? state-override-fn) (fn? state-override-fn))\"));\n}\n\nif((object == null)){\nreturn devtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"span\",\"span\",1394872991),new cljs.core.Keyword(null,\"nil-style\",\"nil-style\",-1505044832),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"nil-label\",\"nil-label\",-587789203)], 0));\n} else {\nvar sub_state = (((!((state_override_fn == null))))?(function (){var G__28806 = devtools.formatters.state.get_current_state();\nreturn (state_override_fn.cljs$core$IFn$_invoke$arity$1 ? state_override_fn.cljs$core$IFn$_invoke$arity$1(G__28806) : state_override_fn.call(null,G__28806));\n})():devtools.formatters.state.get_current_state());\nreturn devtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"object\",({\"object\": object, \"config\": sub_state})], 0));\n}\n});\n\ndevtools.formatters.templating.make_reference.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ndevtools.formatters.templating.make_reference.cljs$lang$applyTo = (function (seq28796){\nvar G__28797 = cljs.core.first(seq28796);\nvar seq28796__$1 = cljs.core.next(seq28796);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__28797,seq28796__$1);\n});\n\ndevtools.formatters.templating._STAR_current_render_stack_STAR_ = cljs.core.PersistentVector.EMPTY;\ndevtools.formatters.templating._STAR_current_render_path_STAR_ = cljs.core.PersistentVector.EMPTY;\ndevtools.formatters.templating.print_preview = (function devtools$formatters$templating$print_preview(markup){\nvar _STAR_print_level_STAR__orig_val__28807 = cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__28808 = (1);\ncljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__28808;\n\ntry{return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([markup], 0));\n}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__28807;\n}});\ndevtools.formatters.templating.add_stack_separators = (function devtools$formatters$templating$add_stack_separators(stack){\nreturn cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(\"-------------\",stack);\n});\ndevtools.formatters.templating.replace_fns_with_markers = (function devtools$formatters$templating$replace_fns_with_markers(stack){\nvar f = (function (v){\nif(cljs.core.fn_QMARK_(v)){\nreturn \"##fn##\";\n} else {\nreturn v;\n}\n});\nreturn clojure.walk.prewalk(f,stack);\n});\ndevtools.formatters.templating.pprint_render_calls = (function devtools$formatters$templating$pprint_render_calls(stack){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.util.pprint_str,stack);\n});\ndevtools.formatters.templating.pprint_render_stack = (function devtools$formatters$templating$pprint_render_stack(stack){\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"\\n\",devtools.formatters.templating.add_stack_separators(devtools.formatters.templating.pprint_render_calls(devtools.formatters.templating.replace_fns_with_markers(cljs.core.reverse(stack)))));\n});\ndevtools.formatters.templating.pprint_render_path = (function devtools$formatters$templating$pprint_render_path(path){\nreturn devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([path], 0));\n});\ndevtools.formatters.templating.assert_markup_error = (function devtools$formatters$templating$assert_markup_error(msg){\nthrow (new Error([\"Assert failed: \",[cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg),\"\\n\",\"Render path: \",devtools.formatters.templating.pprint_render_path(devtools.formatters.templating._STAR_current_render_path_STAR_),\"\\n\",\"Render stack:\\n\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(devtools.formatters.templating.pprint_render_stack(devtools.formatters.templating._STAR_current_render_stack_STAR_))].join(''),\"\\n\",\"false\"].join('')));\n\n});\ndevtools.formatters.templating.surrogate_markup_QMARK_ = (function devtools$formatters$templating$surrogate_markup_QMARK_(markup){\nreturn ((cljs.core.sequential_QMARK_(markup)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(markup),\"surrogate\")));\n});\ndevtools.formatters.templating.render_special = (function devtools$formatters$templating$render_special(name,args){\nvar G__28811 = name;\nswitch (G__28811) {\ncase \"surrogate\":\nvar obj = cljs.core.first(args);\nvar converted_args = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.render_json_ml_STAR_,cljs.core.rest(args));\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.make_surrogate,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj], null),converted_args));\n\nbreak;\ncase \"reference\":\nvar obj = cljs.core.first(args);\nvar converted_obj = ((devtools.formatters.templating.surrogate_markup_QMARK_(obj))?(devtools.formatters.templating.render_json_ml_STAR_.cljs$core$IFn$_invoke$arity$1 ? devtools.formatters.templating.render_json_ml_STAR_.cljs$core$IFn$_invoke$arity$1(obj) : devtools.formatters.templating.render_json_ml_STAR_.call(null,obj)):obj);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.make_reference,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [converted_obj], null),cljs.core.rest(args)));\n\nbreak;\ndefault:\nreturn devtools.formatters.templating.assert_markup_error([\"no matching special tag name: '\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\"'\"].join(''));\n\n}\n});\ndevtools.formatters.templating.emptyish_QMARK_ = (function devtools$formatters$templating$emptyish_QMARK_(v){\nif(((cljs.core.seqable_QMARK_(v)) || (cljs.core.array_QMARK_(v)) || (typeof v === 'string'))){\nreturn cljs.core.empty_QMARK_(v);\n} else {\nreturn false;\n}\n});\ndevtools.formatters.templating.render_subtree = (function devtools$formatters$templating$render_subtree(tag,children){\nvar vec__28815 = tag;\nvar html_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28815,(0),null);\nvar style = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28815,(1),null);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.templating.make_template,html_tag,style,cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.render_json_ml_STAR_,cljs.core.remove.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.emptyish_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,children))));\n});\ndevtools.formatters.templating.render_json_ml_STAR_ = (function devtools$formatters$templating$render_json_ml_STAR_(markup){\nif((!(cljs.core.sequential_QMARK_(markup)))){\nreturn markup;\n} else {\nvar _STAR_current_render_path_STAR__orig_val__28820 = devtools.formatters.templating._STAR_current_render_path_STAR_;\nvar _STAR_current_render_path_STAR__temp_val__28821 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating._STAR_current_render_path_STAR_,cljs.core.first(markup));\ndevtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__temp_val__28821;\n\ntry{var tag = devtools.formatters.helpers.pref(cljs.core.first(markup));\nif(typeof tag === 'string'){\nreturn devtools.formatters.templating.render_special(tag,cljs.core.rest(markup));\n} else {\nif(cljs.core.sequential_QMARK_(tag)){\nreturn devtools.formatters.templating.render_subtree(tag,cljs.core.rest(markup));\n} else {\nreturn devtools.formatters.templating.assert_markup_error([\"invalid json-ml markup at \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(devtools.formatters.templating.print_preview(markup)),\":\"].join(''));\n\n}\n}\n}finally {devtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__orig_val__28820;\n}}\n});\ndevtools.formatters.templating.render_json_ml = (function devtools$formatters$templating$render_json_ml(markup){\nvar _STAR_current_render_stack_STAR__orig_val__28822 = devtools.formatters.templating._STAR_current_render_stack_STAR_;\nvar _STAR_current_render_path_STAR__orig_val__28823 = devtools.formatters.templating._STAR_current_render_path_STAR_;\nvar _STAR_current_render_stack_STAR__temp_val__28824 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating._STAR_current_render_stack_STAR_,markup);\nvar _STAR_current_render_path_STAR__temp_val__28825 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating._STAR_current_render_path_STAR_,\"<render-json-ml>\");\ndevtools.formatters.templating._STAR_current_render_stack_STAR_ = _STAR_current_render_stack_STAR__temp_val__28824;\n\ndevtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__temp_val__28825;\n\ntry{return devtools.formatters.templating.render_json_ml_STAR_(markup);\n}finally {devtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__orig_val__28823;\n\ndevtools.formatters.templating._STAR_current_render_stack_STAR_ = _STAR_current_render_stack_STAR__orig_val__28822;\n}});\ndevtools.formatters.templating.assert_failed_markup_rendering = (function devtools$formatters$templating$assert_failed_markup_rendering(initial_value,value){\nthrow (new Error([\"Assert failed: \",[\"result of markup rendering must be a template,\\n\",\"resolved to \",devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0)),\"initial value: \",devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([initial_value], 0))].join(''),\"\\n\",\"false\"].join('')));\n\n});\ndevtools.formatters.templating.render_markup_STAR_ = (function devtools$formatters$templating$render_markup_STAR_(initial_value,value){\nwhile(true){\nif(cljs.core.fn_QMARK_(value)){\nvar G__28972 = initial_value;\nvar G__28973 = (value.cljs$core$IFn$_invoke$arity$0 ? value.cljs$core$IFn$_invoke$arity$0() : value.call(null));\ninitial_value = G__28972;\nvalue = G__28973;\ncontinue;\n} else {\nif((value instanceof cljs.core.Keyword)){\nvar G__28974 = initial_value;\nvar G__28975 = devtools.formatters.helpers.pref(value);\ninitial_value = G__28974;\nvalue = G__28975;\ncontinue;\n} else {\nif(cljs.core.sequential_QMARK_(value)){\nvar G__28976 = initial_value;\nvar G__28977 = devtools.formatters.templating.render_json_ml(value);\ninitial_value = G__28976;\nvalue = G__28977;\ncontinue;\n} else {\nif(devtools.formatters.templating.template_QMARK_(value)){\nreturn value;\n} else {\nif(devtools.formatters.templating.surrogate_QMARK_(value)){\nreturn value;\n} else {\nif(devtools.formatters.templating.reference_QMARK_(value)){\nreturn value;\n} else {\nreturn (devtools.formatters.templating.assert_failed_markup_rendering.cljs$core$IFn$_invoke$arity$2 ? devtools.formatters.templating.assert_failed_markup_rendering.cljs$core$IFn$_invoke$arity$2(initial_value,value) : devtools.formatters.templating.assert_failed_markup_rendering.call(null,initial_value,value));\n\n}\n}\n}\n}\n}\n}\nbreak;\n}\n});\ndevtools.formatters.templating.render_markup = (function devtools$formatters$templating$render_markup(value){\nreturn devtools.formatters.templating.render_markup_STAR_(value,value);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/templating.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",35],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$oget","~$devtools.oops","~$oset","^F","~$ocall","^F","~$oapply","^F","~$safe-call","^F"],"~:excludes",["~#set",[]],"~:name","~$devtools.formatters.templating","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$devtools.formatters.helpers","^S","~$devtools.formatters.state","^T","~$devtools.util","^U","~$cljs.core","^V","~$goog","^W","~$devtools.protocols","^X","~$string","~$clojure.string","^Z","^Z","~$clojure.walk","^["],"~:seen",["^L",["~:require","~:require-macros"]],"~:uses",["^ ","~$prevent-recursion?","^T","~$IGroup","^X","~$ITemplate","^X","~$get-current-state","^T","~$ISurrogate","^X","~$pref","^S","~$prewalk","^[","~$IFormat","^X","~$pprint-str","^U","~$cljs-value?","^S"],"^12",["^ ","^F","^F","^V","^V"],"~:form",["~#list",["~$ns","^N",["^1?",["^12",["^F","~:refer",["^E","^G","^H","^I","^J"]]]],["^1?",["^11",["^[","^1A",["^1:"]],["^U","^1A",["^1<"]],["^X","^1A",["^16","^15","^18","^1;"]],["^S","^1A",["^19","^1="]],["^T","^1A",["^17","^14"]],["^Z","~:as","^Y"]]]]],"~:flags",["^ ","^12",["^L",[]],"^11",["^L",[]]],"~:js-deps",["^ "],"~:deps",["^W","^V","^[","^U","^X","^S","^T","^Z"]],"^P","^N","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/templating.cljs"],"~:compiled-at",1567400412341,"~:resource-name","devtools/formatters/templating.cljs","~:warnings",[],"~:source","(ns devtools.formatters.templating\n  (:require-macros [devtools.oops :refer [oget oset ocall oapply safe-call]])\n  (:require [clojure.walk :refer [prewalk]]\n            [devtools.util :refer [pprint-str]]\n            [devtools.protocols :refer [ITemplate IGroup ISurrogate IFormat]]\n            [devtools.formatters.helpers :refer [pref cljs-value?]]\n            [devtools.formatters.state :refer [get-current-state prevent-recursion?]]\n            [clojure.string :as string]))\n\n; -- object marking support -------------------------------------------------------------------------------------------------\n\n(defn mark-as-group! [value]\n  (specify! value IGroup)\n  value)\n\n(defn group? [value]\n  (satisfies? IGroup value))\n\n(defn mark-as-template! [value]\n  (specify! value ITemplate)\n  value)\n\n(defn template? [value]\n  (satisfies? ITemplate value))\n\n(defn mark-as-surrogate! [value]\n  (specify! value ISurrogate)\n  value)\n\n(defn surrogate? [value]\n  (satisfies? ISurrogate value))\n\n(defn reference? [value]\n  (and (group? value)\n       (= (aget value 0) \"object\")))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn make-group [& items]\n  (let [group (mark-as-group! #js [])]\n    (doseq [item items]\n      (if (some? item)\n        (if (coll? item)\n          (.apply (aget group \"push\") group (mark-as-group! (into-array item)))                                               ; convenience helper to splat cljs collections\n          (.push group (pref item)))))\n    group))\n\n(defn make-template\n  [tag style & children]\n  (let [tag (pref tag)\n        style (pref style)\n        template (mark-as-template! #js [tag (if (empty? style)\n                                               #js {}\n                                               #js {\"style\" style})])]\n    (doseq [child children]\n      (if (some? child)\n        (if (coll? child)\n          (.apply (aget template \"push\") template (mark-as-template! (into-array (keep pref child))))                         ; convenience helper to splat cljs collections\n          (if-let [child-value (pref child)]\n            (.push template child-value)))))\n    template))\n\n(defn concat-templates! [template & templates]\n  (mark-as-template! (.apply (oget template \"concat\") template (into-array (map into-array (keep pref templates))))))\n\n(defn extend-template! [template & args]\n  (concat-templates! template args))\n\n(defn make-surrogate\n  ; passing :target as body means that targt object body should be rendered using standard templates\n  ; see <surrogate-body> in markup.cljs\n  ([object] (make-surrogate object nil))\n  ([object header] (make-surrogate object header nil))\n  ([object header body] (make-surrogate object header body 0))\n  ([object header body start-index]\n   (mark-as-surrogate! (js-obj\n                         \"target\" object\n                         \"header\" header\n                         \"body\" body\n                         \"startIndex\" (or start-index 0)))))\n\n(defn get-surrogate-target [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"target\"))\n\n(defn get-surrogate-header [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"header\"))\n\n(defn get-surrogate-body [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"body\"))\n\n(defn get-surrogate-start-index [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"startIndex\"))\n\n(defn make-reference [object & [state-override-fn]]\n  {:pre [(or (nil? state-override-fn) (fn? state-override-fn))]}\n  (if (nil? object)\n    ; this code is duplicated in markup.cljs <nil>\n    (make-template :span :nil-style :nil-label)\n    (let [sub-state (if (some? state-override-fn)\n                      (state-override-fn (get-current-state))\n                      (get-current-state))]\n      (make-group \"object\" #js {\"object\" object\n                                \"config\" sub-state}))))\n\n; -- JSON ML support --------------------------------------------------------------------------------------------------------\n\n; a renderer from hiccup-like data markup to json-ml\n;\n; [[tag style] child1 child2 ...] -> #js [tag #js {\"style\" ...} child1 child2 ...]\n;\n\n(declare render-json-ml*)\n\n(def ^:dynamic *current-render-stack* [])\n(def ^:dynamic *current-render-path* [])\n\n(defn print-preview [markup]\n  (binding [*print-level* 1]\n    (pr-str markup)))\n\n(defn add-stack-separators [stack]\n  (interpose \"-------------\" stack))\n\n(defn replace-fns-with-markers [stack]\n  (let [f (fn [v]\n            (if (fn? v)\n              \"##fn##\"\n              v))]\n    (prewalk f stack)))\n\n(defn pprint-render-calls [stack]\n  (map pprint-str stack))\n\n(defn pprint-render-stack [stack]\n  (string/join \"\\n\" (-> stack\n                        reverse\n                        replace-fns-with-markers\n                        pprint-render-calls\n                        add-stack-separators)))\n\n(defn pprint-render-path [path]\n  (pprint-str path))\n\n(defn assert-markup-error [msg]\n  (assert false (str msg \"\\n\"\n                     \"Render path: \" (pprint-render-path *current-render-path*) \"\\n\"\n                     \"Render stack:\\n\"\n                     (pprint-render-stack *current-render-stack*))))\n\n(defn surrogate-markup? [markup]\n  (and (sequential? markup) (= (first markup) \"surrogate\")))\n\n(defn render-special [name args]\n  (case name\n    \"surrogate\" (let [obj (first args)\n                      converted-args (map render-json-ml* (rest args))]\n                  (apply make-surrogate (concat [obj] converted-args)))\n    \"reference\" (let [obj (first args)\n                      converted-obj (if (surrogate-markup? obj) (render-json-ml* obj) obj)]\n                  (apply make-reference (concat [converted-obj] (rest args))))\n    (assert-markup-error (str \"no matching special tag name: '\" name \"'\"))))\n\n(defn emptyish? [v]\n  (if (or (seqable? v) (array? v) (string? v))\n    (empty? v)\n    false))\n\n(defn render-subtree [tag children]\n  (let [[html-tag style] tag]\n    (apply make-template html-tag style (map render-json-ml* (remove emptyish? (map pref children))))))\n\n(defn render-json-ml* [markup]\n  (if-not (sequential? markup)\n    markup\n    (binding [*current-render-path* (conj *current-render-path* (first markup))]\n      (let [tag (pref (first markup))]\n        (cond\n          (string? tag) (render-special tag (rest markup))\n          (sequential? tag) (render-subtree tag (rest markup))\n          :else (assert-markup-error (str \"invalid json-ml markup at \" (print-preview markup) \":\")))))))\n\n(defn render-json-ml [markup]\n  (binding [*current-render-stack* (conj *current-render-stack* markup)\n            *current-render-path* (conj *current-render-path* \"<render-json-ml>\")]\n    (render-json-ml* markup)))\n\n; -- template rendering -----------------------------------------------------------------------------------------------------\n\n(defn ^:dynamic assert-failed-markup-rendering [initial-value value]\n  (assert false (str \"result of markup rendering must be a template,\\n\"\n                     \"resolved to \" (pprint-str value)\n                     \"initial value: \" (pprint-str initial-value))))\n\n(defn render-markup* [initial-value value]\n  (cond\n    (fn? value) (recur initial-value (value))\n    (keyword? value) (recur initial-value (pref value))\n    (sequential? value) (recur initial-value (render-json-ml value))\n    (template? value) value\n    (surrogate? value) value\n    (reference? value) value\n    :else (assert-failed-markup-rendering initial-value value)))\n\n(defn render-markup [value]\n  (render-markup* value value))\n","~:reader-features",["^L",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;;;;;;;AAWA,AAAA,AAAMA,AAAgBC;AAAtB,AACE,AAAAC,AAAUD;AAAV,AAAA,AAAA,AAAA,AAAAC,AAAAC;;AAAAD;AACAD;;AAEF,AAAA,AAAMG,AAAQH;AAAd,AACE,AAAA,AAAA,AAAA,AAAmBA;AAAnB,AAAA,AAAA,AAAA,AAAAE,AAAA,AAAmBF;AAAnB;;AAAA,AAAA,AAAA,AAAmBA;AAAnB,AAAAI,AAAYC,AAAOL;;AAAnB;;;;AAAA,AAAAI,AAAYC,AAAOL;;;AAErB,AAAA,AAAMM,AAAmBN;AAAzB,AACE,AAAAO,AAAUP;AAAV,AAAA,AAAA,AAAA,AAAAO,AAAAL;;AAAAK;AACAP;;AAEF,AAAA,AAAMQ,AAAWR;AAAjB,AACE,AAAA,AAAA,AAAA,AAAsBA;AAAtB,AAAA,AAAA,AAAA,AAAAE,AAAA,AAAsBF;AAAtB;;AAAA,AAAA,AAAA,AAAsBA;AAAtB,AAAAI,AAAYK,AAAUT;;AAAtB;;;;AAAA,AAAAI,AAAYK,AAAUT;;;AAExB,AAAA,AAAMU,AAAoBV;AAA1B,AACE,AAAAW,AAAUX;AAAV,AAAA,AAAA,AAAA,AAAAW,AAAAT;;AAAAS;AACAX;;AAEF,AAAA,AAAMY,AAAYZ;AAAlB,AACE,AAAA,AAAA,AAAA,AAAuBA;AAAvB,AAAA,AAAA,AAAA,AAAAE,AAAA,AAAuBF;AAAvB;;AAAA,AAAA,AAAA,AAAuBA;AAAvB,AAAAI,AAAYS,AAAWb;;AAAvB;;;;AAAA,AAAAI,AAAYS,AAAWb;;;AAEzB,AAAA,AAAMc,AAAYd;AAAlB,AACE,AAAK,AAACG,AAAOH,AACR,AAAA,AAACe,AAAE,AAAA,AAAMf;;AAIhB,AAAA,AAAA,AAAAgB,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAME,AAAcI;AAApB,AACE,AAAMC,AAAM,AAAA,AAAC5B;AAAb,AACE,AAAA6B,AAAA,AAAAH,AAAaC;AAAbG,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQS;AAAR,AAAA,AACE,AAAI,AAAA,AAAA,AAAOA;AACT,AAAI,AAACC,AAAMD;AACT,AAAQ,AAAA,AAAMb,AAAcA,AAAM,AAAC5B,AAAe,AAAC2C,AAAWF;;AAC9D,AAAOb,AAAM,AAACgB,AAAKH;;;AAHvB;;AADF;AAAA,AAAAZ;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAC,AAAA,AAAAP,AAAAG;AAAA,AAAA,AAAAI;AAAA,AAAA,AAAAJ,AAAAI;AAAA,AAAA,AAAA,AAAAC,AAAAL;AAAA,AAAAM,AAAA,AAAAC,AAAAP;AAAA,AAAA,AAAA,AAAAQ,AAAAR;AAAAM;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAI,AAAAV,AAAQY;AAAR,AAAA,AACE,AAAI,AAAA,AAAA,AAAOA;AACT,AAAI,AAACC,AAAMD;AACT,AAAQ,AAAA,AAAMb,AAAcA,AAAM,AAAC5B,AAAe,AAAC2C,AAAWF;;AAC9D,AAAOb,AAAM,AAACgB,AAAKH;;;AAHvB;;AADF;AAAA,AAAA,AAAAD,AAAAX;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AAKAD;;;AAPJ,AAAA,AAAA,AAAML;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAF;;;AAAA,AASA,AAAA,AAAA,AAAAP,AAAM4B;AAAN,AAAA,AAAA3B,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA2B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAxB;;;AAAA,AAAA,AAAA,AAAA,AAAMwB,AACHK,AAAIC,AAAQC;AADf,AAEE,AAAMF,AAAI,AAACN,AAAKM;AACVC,AAAM,AAACP,AAAKO;AACZE,AAAS,AAAA,AAAC9C,AAAuB2C,AAAI,AAAA,AAAA,AAAI,AAACI,AAAOH,AAEGA;AAJ1D,AAKE,AAAAI,AAAA,AAAA7B,AAAc0B;AAAdI,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQC;AAAR,AAAA,AACE,AAAI,AAAA,AAAA,AAAOA;AACT,AAAI,AAACjB,AAAMiB;AACT,AAAQ,AAAA,AAAMN,AAAiBA,AAAS,AAAC9C,AAAkB,AAACoC,AAAW,AAACiB,AAAKhB,AAAKe;;AAClF,AAAAE,AAAqB,AAACjB,AAAKe;AAA3B,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAAOT,AAASS;;AADlB;;;AAHJ;;AADF;AAAA,AAAAP;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAzB,AAAA,AAAAP,AAAA6B;AAAA,AAAA,AAAAtB;AAAA,AAAA,AAAAsB,AAAAtB;AAAA,AAAA,AAAA,AAAAC,AAAAqB;AAAA,AAAApB,AAAA,AAAAC,AAAAmB;AAAA,AAAA,AAAA,AAAAlB,AAAAkB;AAAApB;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAI,AAAAgB,AAAQI;AAAR,AAAA,AACE,AAAI,AAAA,AAAA,AAAOA;AACT,AAAI,AAACjB,AAAMiB;AACT,AAAQ,AAAA,AAAMN,AAAiBA,AAAS,AAAC9C,AAAkB,AAACoC,AAAW,AAACiB,AAAKhB,AAAKe;;AAClF,AAAAE,AAAqB,AAACjB,AAAKe;AAA3B,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAAOT,AAASS;;AADlB;;;AAHJ;;AADF;AAAA,AAAA,AAAAtB,AAAAe;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AAMAF;;;AAbJ,AAAA,AAAA,AAAMR;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA,AAAAR,AAAAO;AAAAA,AAAA,AAAAN,AAAAM;AAAAE,AAAA,AAAAT,AAAAO;AAAAA,AAAA,AAAAN,AAAAM;AAAA,AAAA,AAAAG,AAAA;AAAA,AAAA,AAAAA,AAAAF,AAAAC,AAAAF;;;AAAA,AAeA,AAAA,AAAA,AAAA7B,AAAM8C;AAAN,AAAA,AAAA7C,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA6C,AAAA,AAAA,AAAA,AAAA1C;;;AAAA,AAAA,AAAA,AAAA,AAAM0C,AAAmBV,AAAWa;AAApC,AACE,AAAC3D,AAAkB,AAAQ,AAAA,AAAM8C,AAAmBA,AAAS,AAACV,AAAW,AAACwB,AAAIC,AAAW,AAACR,AAAKhB,AAAKsB;;;AADtG,AAAA,AAAA,AAAMH;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA,AAAA1B,AAAAyB;AAAAA,AAAA,AAAAxB,AAAAwB;AAAA,AAAA,AAAAf,AAAA;AAAA,AAAA,AAAAA,AAAAgB,AAAAD;;;AAAA,AAGA,AAAA,AAAA,AAAA/C,AAAMoD;AAAN,AAAA,AAAAnD,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAmD,AAAA,AAAA,AAAA,AAAAhD;;;AAAA,AAAA,AAAA,AAAA,AAAMgD,AAAkBhB,AAAWmB;AAAnC,AACE,AAACC,AAAkBpB,AAASmB;;;AAD9B,AAAA,AAAA,AAAMH;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA,AAAAhC,AAAA+B;AAAAA,AAAA,AAAA9B,AAAA8B;AAAA,AAAA,AAAArB,AAAA;AAAA,AAAA,AAAAA,AAAAsB,AAAAD;;;AAAA,AAGA,AAAA,AAAA,AAAArD,AAAM0D;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AAGFE;AAHJ,AAGY,AAAA,AAACC,AAAeD;;;AAH5B,AAAA,AAAA,AAAMF,AAIFE,AAAOE;AAJX,AAImB,AAAA,AAACC,AAAeH,AAAOE;;;AAJ1C,AAAA,AAAA,AAAMJ,AAKFE,AAAOE,AAAOE;AALlB,AAKwB,AAAA,AAACC,AAAeL,AAAOE,AAAOE;;;AALtD,AAAA,AAAA,AAAMN,AAMFE,AAAOE,AAAOE,AAAKE;AANvB,AAOG,AAACxE,AAAmB,AAAAyE,AAAA,AAAA,AAAA,AAAA,AAAA,AACWP,AACAE,AACFE,AACM,AAAAI,AAAIF;AAAJ,AAAA,AAAAE;AAAAA;;AAAA;;;AAJf,AAAAD;;;;AAPvB,AAAA,AAAA,AAAMT;;AAAN,AAaA,AAAA,AAAMW,AAAsBC;AAA5B,AAAA,AACS,AAAC1E,AAAW0E;AADrB;AAAA,AAAA,AAAA,AAAAX,AAAA;;;AAEE,AAAA,AAAMW;;AAER,AAAA,AAAMC,AAAsBD;AAA5B,AAAA,AACS,AAAC1E,AAAW0E;AADrB;AAAA,AAAA,AAAA,AAAAX,AAAA;;;AAEE,AAAA,AAAMW;;AAER,AAAA,AAAME,AAAoBF;AAA1B,AAAA,AACS,AAAC1E,AAAW0E;AADrB;AAAA,AAAA,AAAA,AAAAX,AAAA;;;AAEE,AAAA,AAAMW;;AAER,AAAA,AAAMG,AAA2BH;AAAjC,AAAA,AACS,AAAC1E,AAAW0E;AADrB;AAAA,AAAA,AAAA,AAAAX,AAAA;;;AAEE,AAAA,AAAMW;;AAER,AAAA,AAAA,AAAAtE,AAAM0E;AAAN,AAAA,AAAAzE,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAyE,AAAA,AAAA,AAAA,AAAAtE;;;AAAA,AAAA,AAAA,AAAA,AAAAuE,AAAMD,AAAgBd;AAAtB,AAAA,AAAAgB,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAgCI;AAAhC,AAAA,AACS,AAAI,AAAA,AAAMA,AAAmB,AAACC,AAAID;AAD3C;AAAA,AAAA,AAAA,AAAArB,AAAA;;;AAEE,AAAI,AAAA,AAAMC;AAER,AAAA,AAAA,AAAA,AAACsB;;AACD,AAAMC,AAAU,AAAI,AAAA,AAAA,AAAOH,AACT,AAAAI,AAAmB,AAACC;AAApB,AAAA,AAAAD,AAAAA,AAACJ,AAAAA,AAAAA;AACD,AAACK;AAFnB,AAGE,AAAA,AAAA,AAACC,AAAkC1B,AACAuB;;;;AATzC,AAAA,AAAA,AAAMT;;AAAN;AAAA,AAAA,AAAA,AAAAI,AAAMJ;AAAN,AAAA,AAAAK,AAAA,AAAAzD,AAAAwD;AAAAA,AAAA,AAAAvD,AAAAuD;AAAA,AAAA,AAAA9C,AAAA;AAAA,AAAA,AAAAA,AAAA+C,AAAAD;;;AAAA,AAkBA,AAAA,AAEA,AAAA,AAAeS;AACf,AAAA,AAAeC;AAEf,AAAA,AAAMC,AAAeC;AAArB,AACE,AAAAC,AAAUE;AAAVD,AAAA;AAAA,AAAA,AAAAA,AAAUC;;AAAV,AAAA,AACE,AAACC,AAAOJ;AADV,AAAA,AAAAC,AAAUE;;AAGZ,AAAA,AAAME,AAAsBC;AAA5B,AACE,AAAA,AAACC,AAA0BD;;AAE7B,AAAA,AAAME,AAA0BF;AAAhC,AACE,AAAMG,AAAE,AAAKC;AAAL,AACE,AAAI,AAACnB,AAAImB;AAAT;;AAEEA;;;AAHZ,AAIE,AAACC,AAAQF,AAAEH;;AAEf,AAAA,AAAMM,AAAqBN;AAA3B,AACE,AAAC9C,AAAIqD,AAAWP;;AAElB,AAAA,AAAMQ,AAAqBR;AAA3B,AACE,AAAA,AAACS,AAAiB,AAAA,AAAA,AAAA,AAAIT,AACAU,AACAR,AACAI,AACAP;;AAExB,AAAA,AAAMY,AAAoBC;AAA1B,AACE,AAACC,AAAWD;;AAEd,AAAA,AAAME,AAAqBC;AAA3B,AACE,AAAA,AAAA,AAAA,AAAApD,AAAA,AAAA,AAAA,AAAA,AAAc,AAAA,AAAA,AAAA,AAAA,AAAKoD,AACgB,AAACJ,AAAmBnB,AAEpC,AAACgB,AAAoBjB;;;AAE1C,AAAA,AAAMyB,AAAmBtB;AAAzB,AACE,AAAK,AAACuB,AAAYvB,AAAQ,AAAA,AAAC3F,AAAE,AAACuB,AAAMoE;;AAEtC,AAAA,AAAMwB,AAAgBC,AAAK5D;AAA3B,AACE,AAAA6D,AAAMD;AAAN,AAAA,AAAAC;AAAA;AACc,AAAMC,AAAI,AAAC/F,AAAMiC;AACX+D,AAAe,AAACpE,AAAIqE,AAAgB,AAACC,AAAKjE;AADhD,AAEE,AAACkE,AAAM/D,AAAe,AAAA,AAACgE,AAAQL,AAAKC;;;AAHpD;AAIc,AAAMD,AAAI,AAAC/F,AAAMiC;AACXoE,AAAc,AAAI,AAACX,AAAkBK,AAAK,AAACE,AAAAA,AAAAA,AAAgBF,AAAAA,AAAKA;AADtE,AAEE,AAACI,AAAM/C,AAAe,AAAA,AAACgD,AAAQC,AAAe,AAACH,AAAKjE;;;;AAClE,AAACuD,AAAoB,AAAA,AAAA,AAAuCK;;;;AAEhE,AAAA,AAAMS,AAAWxB;AAAjB,AACE,AAAI,AAAI,AAACyB,AAASzB,AAAG,AAAC0B,AAAO1B,AAAG,AAASA;AACvC,AAAC/D,AAAO+D;;AADV;;;AAIF,AAAA,AAAM2B,AAAgB9F,AAAIE;AAA1B,AACE,AAAA6F,AAAuB/F;AAAvB,AAAA4C,AAAAmD,AAAA,AAAA,AAAOC;AAAP,AAAApD,AAAAmD,AAAA,AAAA,AAAgB9F;AAAhB,AACE,AAACgG,AAAMtG,AAAcqG,AAAS/F,AAAM,AAACgB,AAAIqE,AAAgB,AAACY,AAAOP,AAAU,AAAC1E,AAAIvB,AAAKQ;;AAEzF,AAAA,AAAMoF,AAAiB7B;AAAvB,AACE,AAAA,AAAQ,AAACuB,AAAYvB;AACnBA;;AACA,AAAA0C,AAAU5C;AAAV6C,AAAgC,AAACC,AAAK9C,AAAsB,AAAClE,AAAMoE;AAAnE,AAAA,AAAA2C,AAAU7C;;AAAV,AAAA,AACE,AAAMvD,AAAI,AAACN,AAAK,AAACL,AAAMoE;AAAvB,AACE,AACE,AAASzD;AAAK,AAACiF,AAAejF,AAAI,AAACuF,AAAK9B;;AAD1C,AAEE,AAACuB,AAAYhF;AAAK,AAAC8F,AAAe9F,AAAI,AAACuF,AAAK9B;;AAF9C,AAGQ,AAACoB,AAAoB,AAAA,AAAA,AAAkC,AAACrB,AAAcC;;;;AALlF,AAAA,AAAA0C,AAAU5C;;;AAOd,AAAA,AAAM+C,AAAgB7C;AAAtB,AACE,AAAA8C,AAAUjD;AAAVkD,AACUjD;AADVkD,AAAiC,AAACJ,AAAK/C,AAAuBG;AAA9DiD,AACgC,AAAA,AAACL,AAAK9C;AADtC,AAAA,AAAAkD,AAAUnD;;AAAV,AAAAoD,AACUnD;;AADV,AAAA,AAEE,AAAC+B,AAAgB7B;AAFnB,AAAA,AAAA+C,AACUjD;;AADV,AAAAgD,AAAUjD;;AAMZ,AAAA,AAAgBqD,AAAgCC,AAAc7J;AAA9D,AACE,AAAA,AAAA,AAAA,AAAA2E,AAAA,AAAA,AAAA,AAAA,AAAc,AAAA,AAAA,AAAA,AACoB,AAACkD,AAAW7H,AACT,AAAC6H,AAAWgC;;;AAEnD,AAAA,AAAMC,AAAgBD,AAAc7J;;AAApC,AACE,AACE,AAACiG,AAAIjG;AAAO,AAAO6J;AAAc,AAAC7J,AAAAA,AAAAA;;;;;AADpC,AAEE,AAAA+J,AAAU/J;AAAO,AAAO6J;AAAc,AAAClH,AAAK3C;;;;;AAF9C,AAGE,AAACiI,AAAYjI;AAAO,AAAO6J;AAAc,AAACN,AAAevJ;;;;;AAH3D,AAIE,AAACQ,AAAUR;AAAOA;;AAJpB,AAKE,AAACY,AAAWZ;AAAOA;;AALrB,AAME,AAACc,AAAWd;AAAOA;;AANrB,AAOQ,AAAC4J,AAAAA,AAAAA,AAA+BC,AAAAA,AAAc7J,AAAAA;;;;;;;;;;;AAExD,AAAA,AAAMgK,AAAehK;AAArB,AACE,AAAC8J,AAAe9J,AAAMA","names",["devtools.formatters.templating/mark-as-group!","value","x28714","cljs.core/PROTOCOL_SENTINEL","devtools.formatters.templating/group?","cljs.core/native-satisfies?","devtools.protocols/IGroup","devtools.formatters.templating/mark-as-template!","x28719","devtools.formatters.templating/template?","devtools.protocols/ITemplate","devtools.formatters.templating/mark-as-surrogate!","x28729","devtools.formatters.templating/surrogate?","devtools.protocols/ISurrogate","devtools.formatters.templating/reference?","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","devtools.formatters.templating/make-group","seq28732","self__4718__auto__","cljs.core/seq","items","group","seq__28737","chunk__28738","count__28739","i__28740","temp__5720__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","item","cljs.core/coll?","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1","devtools.formatters.helpers/pref","devtools.formatters.templating/make-template","seq28751","G__28752","G__28753","self__4717__auto__","tag","style","children","template","cljs.core/empty?","seq__28761","chunk__28762","count__28763","i__28764","child","cljs.core.keep.cljs$core$IFn$_invoke$arity$2","temp__5718__auto__","child-value","devtools.formatters.templating/concat-templates!","seq28781","G__28782","templates","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core/into-array","devtools.formatters.templating/extend-template!","seq28783","G__28784","args","devtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic","G__28791","devtools.formatters.templating/make-surrogate","js/Error","object","devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2","header","devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3","body","devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4","start-index","obj28793","or__4131__auto__","devtools.formatters.templating/get-surrogate-target","surrogate","devtools.formatters.templating/get-surrogate-header","devtools.formatters.templating/get-surrogate-body","devtools.formatters.templating/get-surrogate-start-index","devtools.formatters.templating/make-reference","p__28800","vec__28803","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","seq28796","G__28797","state-override-fn","cljs.core/fn?","devtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic","sub-state","G__28806","devtools.formatters.state/get-current-state","devtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.templating/*current-render-stack*","devtools.formatters.templating/*current-render-path*","devtools.formatters.templating/print-preview","markup","*print-level*-orig-val__28807","*print-level*-temp-val__28808","cljs.core/*print-level*","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.templating/add-stack-separators","stack","cljs.core.interpose.cljs$core$IFn$_invoke$arity$2","devtools.formatters.templating/replace-fns-with-markers","f","v","clojure.walk/prewalk","devtools.formatters.templating/pprint-render-calls","devtools.util/pprint-str","devtools.formatters.templating/pprint-render-stack","clojure.string.join.cljs$core$IFn$_invoke$arity$2","cljs.core/reverse","devtools.formatters.templating/pprint-render-path","path","devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.templating/assert-markup-error","msg","devtools.formatters.templating/surrogate-markup?","cljs.core/sequential?","devtools.formatters.templating/render-special","name","G__28811","obj","converted-args","devtools.formatters.templating/render-json-ml*","cljs.core/rest","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","converted-obj","devtools.formatters.templating/emptyish?","cljs.core/seqable?","cljs.core/array?","devtools.formatters.templating/render-subtree","vec__28815","html-tag","cljs.core.apply.cljs$core$IFn$_invoke$arity$4","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","*current-render-path*-orig-val__28820","*current-render-path*-temp-val__28821","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","devtools.formatters.templating/render-json-ml","*current-render-stack*-orig-val__28822","*current-render-path*-orig-val__28823","*current-render-stack*-temp-val__28824","*current-render-path*-temp-val__28825","devtools.formatters.templating/assert-failed-markup-rendering","initial-value","devtools.formatters.templating/render-markup*","cljs.core/Keyword","devtools.formatters.templating/render-markup"]]],"~:cache-keys",["~#cmap",[["~:macro","~$devtools.defaults"],[1521503194000],["^1G","goog/labs/useragent/platform.js"],[1553268783000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^L",[]],"~:deps-syms",["^W","~$goog.labs.userAgent.util","~$goog.string"]]],["^1T","^V"],[1553268783000],["^1G","devtools/formatters/helpers.cljs"],[1521503194000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V","~$devtools.prefs","~$devtools.munging","~$devtools.format","^X"]]],["^1G","goog/math/math.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","~$goog.array","~$goog.asserts"]]],["^1G","goog/labs/useragent/browser.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^23","^1Z","~$goog.object","~$goog.string.internal"]]],["^1G","goog/array/array.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^24"]]],["^1T","~$devtools.version"],[1521503194000],["^1G","goog/useragent/useragent.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^1Z","~$goog.reflect","^1["]]],["^1G","devtools/formatters/templating.cljs"],[1521503194000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V","^[","^U","^X","^S","^T","^Z"]]],["^1G","goog/debug/error.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W"]]],["^1G","goog/dom/nodetype.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W"]]],["^1G","cljs/pprint.cljs"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V","^Z","^1[","~$goog.string.StringBuffer"]]],["^1G","goog/object/object.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W"]]],"~:SHADOW-TIMESTAMP",[1553268784000,1553268783000],["^1G","goog/math/long.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^24","^2;"]]],["^1G","devtools/version.cljs"],[1521503194000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V"]]],["^1G","goog/string/internal.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W"]]],["^1G","goog/functions/functions.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W"]]],["^1G","devtools/prefs.cljs"],[1521503194000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V","^1U"]]],["^1G","clojure/walk.cljs"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V"]]],["^1G","goog/structs/map.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1T","^F"],[1521503194000],["^1G","devtools/munging.cljs"],[1521503194000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V","^Z","~$devtools.context","^25","^2<"]]],["^1G","goog/labs/useragent/engine.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^23","^1Z","^1["]]],["^1G","goog/asserts/asserts.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1T","~$cljs.pprint"],[1553268783000],["^1G","goog/uri/uri.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^23","^24","^1[","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1G","goog/base.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",[]]],["^1G","goog/structs/structs.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^23","^25"]]],["^1G","clojure/string.cljs"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V","^1[","^2<"]]],["^1G","devtools/formatters/state.cljs"],[1521503194000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V"]]],["^1G","goog/string/string.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^26"]]],["^1T","^21"],[1521503194000],["^1G","clojure/data.cljs"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V","~$clojure.set"]]],["^1G","goog/reflect/reflect.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W"]]],["^1G","goog/labs/useragent/util.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^26"]]],["^1G","goog/string/stringbuffer.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W"]]],["^1G","goog/iter/iter.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^23","^24","~$goog.functions","~$goog.math"]]],["^1G","devtools/defaults.cljs"],[1521503194000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V"]]],["^1T","^20"],[1521503194000],["^1G","cljs/core.cljs"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["~$goog.math.Long","~$goog.math.Integer","^1[","^25","^23","~$goog.Uri","^2<"]]],["^1G","devtools/context.cljs"],[1521503194000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V"]]],["^1G","goog/math/integer.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W"]]],["^1G","devtools/format.cljs"],[1521503194000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V","^2@"]]],["^1T","~$devtools.compiler"],[1521503194000],["^1G","clojure/set.cljs"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V"]]],["^1G","goog/uri/utils.js"],[1553268783000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^23","^24","^1["]]],["^1G","devtools/protocols.cljs"],[1521503194000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V"]]],["^1G","devtools/util.cljs"],[1521503194000,"^1V",["^ ","^1W",null,"^1X",["^L",[]],"^1Y",["^W","^V","~$goog.userAgent","~$clojure.data","^27","^2@","^2C","^20"]]]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",1,"^8",5,"^9",1,"^:",35],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",["^ ","^E","^F","^G","^F","^H","^F","^I","^F","^J","^F"],"^K",["^L",[]],"^M","^N","^Q",null,"^R",["^ ","^S","^S","^T","^T","^U","^U","^V","^V","^W","^W","^X","^X","^Y","^Z","^Z","^Z","^[","^["],"^10",["^L",["^11","^12"]],"~:shadow/js-access-global",["^L",["Error"]],"^13",["^ ","^14","^T","^15","^X","^16","^X","^17","^T","^18","^X","^19","^S","^1:","^[","^1;","^X","^1<","^U","^1=","^S"],"~:defs",["^ ","~$make-template",["^ ","~:protocol-inline",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",48,"^8",7,"^9",48,"^:",20,"~:arglists",["^1?",["~$quote",["^1?",[["~$tag","~$style","~$&","~$children"]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^1?",["^2Y","^2Z","^2["]]],"^2W",["^1?",[["^2Y","^2Z","~$&","^2["]]],"~:arglists-meta",["^1?",[null]]]],"^M","~$devtools.formatters.templating/make-template","^6","devtools/formatters/templating.cljs","^:",20,"^30",["^ ","^31",true,"^32",2,"^33",2,"^34",[["^1?",["^2Y","^2Z","^2["]]],"^2W",["^1?",[["^2Y","^2Z","~$&","^2["]]],"^35",["^1?",[null]]],"^34",[["^1?",["^2Y","^2Z","^2["]]],"~:protocol-impl",null,"^32",2,"^35",["^1?",[null]],"^8",1,"^31",true,"~:methods",[["^ ","^32",2,"^31",true,"~:tag","~$any"]],"^7",48,"~:ret-tag","^3:","^9",48,"^33",2,"~:fn-var",true,"^2W",["^1?",[["^2Y","^2Z","~$&","^2["]]]],"~$mark-as-surrogate!",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",26,"^8",7,"^9",26,"^:",25,"^2W",["^1?",["^2X",["^1?",[["~$value"]]]]]],"^M","~$devtools.formatters.templating/mark-as-surrogate!","^6","devtools/formatters/templating.cljs","^:",25,"^34",["^1?",[["^3>"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",26,"^9",26,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3>"]]]]]],"~$concat-templates!",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",63,"^8",7,"^9",63,"^:",24,"^2W",["^1?",["^2X",["^1?",[["~$template","~$&","~$templates"]]]]],"^30",["^ ","^31",true,"^32",1,"^33",1,"^34",[["^1?",["^3A","^3B"]]],"^2W",["^1?",[["^3A","~$&","^3B"]]],"^35",["^1?",[null]]]],"^M","~$devtools.formatters.templating/concat-templates!","^6","devtools/formatters/templating.cljs","^:",24,"^30",["^ ","^31",true,"^32",1,"^33",1,"^34",[["^1?",["^3A","^3B"]]],"^2W",["^1?",[["^3A","~$&","^3B"]]],"^35",["^1?",[null]]],"^34",[["^1?",["^3A","^3B"]]],"^37",null,"^32",1,"^35",["^1?",[null]],"^8",1,"^31",true,"^38",[["^ ","^32",1,"^31",true,"^39","^3:"]],"^7",63,"^3;","^3:","^9",63,"^33",1,"^3<",true,"^2W",["^1?",[["^3A","~$&","^3B"]]]],"~$make-reference",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",98,"^8",7,"^9",98,"^:",21,"^2W",["^1?",["^2X",["^1?",[["~$object","~$&",["~$state-override-fn"]]]]]],"^30",["^ ","^31",true,"^32",1,"^33",1,"^34",[["^1?",["^3E",["^3F"]]]],"^2W",["^1?",[["^3E","~$&",["^3F"]]]],"^35",["^1?",[null]]]],"^M","~$devtools.formatters.templating/make-reference","^6","devtools/formatters/templating.cljs","^:",21,"^30",["^ ","^31",true,"^32",1,"^33",1,"^34",[["^1?",["^3E",["^3F"]]]],"^2W",["^1?",[["^3E","~$&",["^3F"]]]],"^35",["^1?",[null]]],"^34",[["^1?",["^3E",["^3F"]]]],"^37",null,"^32",1,"^35",["^1?",[null]],"^8",1,"^31",true,"^38",[["^ ","^32",1,"^31",true,"^39","^3:"]],"^7",98,"^3;","^3:","^9",98,"^33",1,"^3<",true,"^2W",["^1?",[["^3E","~$&",["^3F"]]]]],"~$make-surrogate",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",69,"^8",7,"^9",69,"^:",21,"^2W",["^1?",["^2X",["^1?",[["^3E"],["^3E","~$header"],["^3E","^3I","~$body"],["^3E","^3I","^3J","~$start-index"]]]]],"^30",["^ ","^31",false,"^32",4,"^33",4,"^34",["^1?",[["^3E"],["^3E","^3I"],["^3E","^3I","^3J"],["^3E","^3I","^3J","^3K"]]],"^2W",["^1?",[["^3E"],["^3E","^3I"],["^3E","^3I","^3J"],["^3E","^3I","^3J","^3K"]]],"^35",["^1?",[null,null,null,null]]]],"^M","~$devtools.formatters.templating/make-surrogate","^6","devtools/formatters/templating.cljs","^:",21,"^30",["^ ","^31",false,"^32",4,"^33",4,"^34",["^1?",[["^3E"],["^3E","^3I"],["^3E","^3I","^3J"],["^3E","^3I","^3J","^3K"]]],"^2W",["^1?",[["^3E"],["^3E","^3I"],["^3E","^3I","^3J"],["^3E","^3I","^3J","^3K"]]],"^35",["^1?",[null,null,null,null]]],"^34",["^1?",[["^3E"],["^3E","^3I"],["^3E","^3I","^3J"],["^3E","^3I","^3J","^3K"]]],"^37",null,"^32",4,"^35",["^1?",[null,null,null,null]],"^8",1,"^31",false,"^38",[["^ ","^32",1,"^31",false,"^39","^3:"],["^ ","^32",2,"^31",false,"^39","^3:"],["^ ","^32",3,"^31",false,"^39","^3:"],["^ ","^32",4,"^31",false,"^39","^3:"]],"^7",69,"^9",69,"^33",4,"^3<",true,"^2W",["^1?",[["^3E"],["^3E","^3I"],["^3E","^3I","^3J"],["^3E","^3I","^3J","^3K"]]]],"~$pprint-render-path",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",145,"^8",7,"^9",145,"^:",25,"^2W",["^1?",["^2X",["^1?",[["~$path"]]]]]],"^M","~$devtools.formatters.templating/pprint-render-path","^6","devtools/formatters/templating.cljs","^:",25,"^34",["^1?",[["^3N"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",145,"^3;","^Y","^9",145,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3N"]]]]]],"~$get-surrogate-body",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",90,"^8",7,"^9",90,"^:",25,"^2W",["^1?",["^2X",["^1?",[["~$surrogate"]]]]]],"^M","~$devtools.formatters.templating/get-surrogate-body","^6","devtools/formatters/templating.cljs","^:",25,"^34",["^1?",[["^3Q"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",90,"^3;","^3:","^9",90,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3Q"]]]]]],"~$reference?",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",33,"^8",7,"^9",33,"^:",17,"^2W",["^1?",["^2X",["^1?",[["^3>"]]]]]],"^M","~$devtools.formatters.templating/reference?","^6","devtools/formatters/templating.cljs","^:",17,"^34",["^1?",[["^3>"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",33,"^3;","~$boolean","^9",33,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3>"]]]]]],"~$replace-fns-with-markers",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",128,"^8",7,"^9",128,"^:",31,"^2W",["^1?",["^2X",["^1?",[["~$stack"]]]]]],"^M","~$devtools.formatters.templating/replace-fns-with-markers","^6","devtools/formatters/templating.cljs","^:",31,"^34",["^1?",[["^3W"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",128,"^3;","^3:","^9",128,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3W"]]]]]],"~$*current-render-path*",["^ ","^5",["^ ","^6","devtools/formatters/templating.cljs","^7",119,"^8",16,"^9",119,"^:",37,"~:dynamic",true],"^M","~$devtools.formatters.templating/*current-render-path*","^6","devtools/formatters/templating.cljs","^:",37,"^8",1,"^3Z",true,"^7",119,"^9",119,"^39","~$cljs.core/IVector"],"~$render-subtree",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",172,"^8",7,"^9",172,"^:",21,"^2W",["^1?",["^2X",["^1?",[["^2Y","^2["]]]]]],"^M","~$devtools.formatters.templating/render-subtree","^6","devtools/formatters/templating.cljs","^:",21,"^34",["^1?",[["^2Y","^2["]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",172,"^3;","^3:","^9",172,"^33",2,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^2Y","^2["]]]]]],"~$emptyish?",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",167,"^8",7,"^9",167,"^:",16,"^2W",["^1?",["^2X",["^1?",[["~$v"]]]]]],"^M","~$devtools.formatters.templating/emptyish?","^6","devtools/formatters/templating.cljs","^:",16,"^34",["^1?",[["~$v"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",167,"^3;","^3U","^9",167,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["~$v"]]]]]],"~$assert-failed-markup-rendering",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",193,"^8",17,"^9",193,"^:",47,"^3Z",true,"^2W",["^1?",["^2X",["^1?",[["~$initial-value","^3>"]]]]]],"^M","~$devtools.formatters.templating/assert-failed-markup-rendering","^6","devtools/formatters/templating.cljs","^:",47,"^34",["^1?",[["^46","^3>"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^3Z",true,"^7",193,"^3;","~$clj-nil","^9",193,"^33",2,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^46","^3>"]]]]]],"~$pprint-render-calls",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",135,"^8",7,"^9",135,"^:",26,"^2W",["^1?",["^2X",["^1?",[["^3W"]]]]]],"^M","~$devtools.formatters.templating/pprint-render-calls","^6","devtools/formatters/templating.cljs","^:",26,"^34",["^1?",[["^3W"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",135,"^3;","~$cljs.core/LazySeq","^9",135,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3W"]]]]]],"~$render-markup",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",208,"^8",7,"^9",208,"^:",20,"^2W",["^1?",["^2X",["^1?",[["^3>"]]]]]],"^M","~$devtools.formatters.templating/render-markup","^6","devtools/formatters/templating.cljs","^:",20,"^34",["^1?",[["^3>"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",208,"^3;",["^L",[null,"^48"]],"^9",208,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3>"]]]]]],"~$assert-markup-error",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",148,"^8",7,"^9",148,"^:",26,"^2W",["^1?",["^2X",["^1?",[["~$msg"]]]]]],"^M","~$devtools.formatters.templating/assert-markup-error","^6","devtools/formatters/templating.cljs","^:",26,"^34",["^1?",[["^4?"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",148,"^3;","^48","^9",148,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^4?"]]]]]],"~$surrogate-markup?",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",154,"^8",7,"^9",154,"^:",24,"^2W",["^1?",["^2X",["^1?",[["~$markup"]]]]]],"^M","~$devtools.formatters.templating/surrogate-markup?","^6","devtools/formatters/templating.cljs","^:",24,"^34",["^1?",[["^4B"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",154,"^3;","^3U","^9",154,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^4B"]]]]]],"~$render-markup*",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",198,"^8",7,"^9",198,"^:",21,"^2W",["^1?",["^2X",["^1?",[["^46","^3>"]]]]]],"^M","~$devtools.formatters.templating/render-markup*","^6","devtools/formatters/templating.cljs","^:",21,"^34",["^1?",[["^46","^3>"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",198,"^3;",["^L",[null,"^48"]],"^9",198,"^33",2,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^46","^3>"]]]]]],"~$add-stack-separators",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",125,"^8",7,"^9",125,"^:",27,"^2W",["^1?",["^2X",["^1?",[["^3W"]]]]]],"^M","~$devtools.formatters.templating/add-stack-separators","^6","devtools/formatters/templating.cljs","^:",27,"^34",["^1?",[["^3W"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",125,"^3;","^4;","^9",125,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3W"]]]]]],"~$make-group",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",39,"^8",7,"^9",39,"^:",17,"^2W",["^1?",["^2X",["^1?",[["~$&","~$items"]]]]],"^30",["^ ","^31",true,"^32",0,"^33",0,"^34",[["^1?",["^4I"]]],"^2W",["^1?",[["~$&","^4I"]]],"^35",["^1?",[null]]]],"^M","~$devtools.formatters.templating/make-group","^6","devtools/formatters/templating.cljs","^:",17,"^30",["^ ","^31",true,"^32",0,"^33",0,"^34",[["^1?",["^4I"]]],"^2W",["^1?",[["~$&","^4I"]]],"^35",["^1?",[null]]],"^34",[["^1?",["^4I"]]],"^37",null,"^32",0,"^35",["^1?",[null]],"^8",1,"^31",true,"^38",[["^ ","^32",0,"^31",true,"^39","^3:"]],"^7",39,"^3;","^3:","^9",39,"^33",0,"^3<",true,"^2W",["^1?",[["~$&","^4I"]]]],"~$get-surrogate-header",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",86,"^8",7,"^9",86,"^:",27,"^2W",["^1?",["^2X",["^1?",[["^3Q"]]]]]],"^M","~$devtools.formatters.templating/get-surrogate-header","^6","devtools/formatters/templating.cljs","^:",27,"^34",["^1?",[["^3Q"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",86,"^3;","^3:","^9",86,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3Q"]]]]]],"~$render-json-ml*",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",176,"^8",7,"^9",176,"^:",22,"^2W",["^1?",["^2X",["^1?",[["^4B"]]]]]],"^M","~$devtools.formatters.templating/render-json-ml*","^6","devtools/formatters/templating.cljs","^:",22,"^34",["^1?",[["^4B"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",176,"^9",176,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^4B"]]]]]],"~$surrogate?",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",30,"^8",7,"^9",30,"^:",17,"^2W",["^1?",["^2X",["^1?",[["^3>"]]]]]],"^M","~$devtools.formatters.templating/surrogate?","^6","devtools/formatters/templating.cljs","^:",17,"^34",["^1?",[["^3>"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",30,"^3;","^3U","^9",30,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3>"]]]]]],"~$render-json-ml",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",186,"^8",7,"^9",186,"^:",21,"^2W",["^1?",["^2X",["^1?",[["^4B"]]]]]],"^M","~$devtools.formatters.templating/render-json-ml","^6","devtools/formatters/templating.cljs","^:",21,"^34",["^1?",[["^4B"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",186,"^9",186,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^4B"]]]]]],"~$*current-render-stack*",["^ ","^5",["^ ","^6","devtools/formatters/templating.cljs","^7",118,"^8",16,"^9",118,"^:",38,"^3Z",true],"^M","~$devtools.formatters.templating/*current-render-stack*","^6","devtools/formatters/templating.cljs","^:",38,"^8",1,"^3Z",true,"^7",118,"^9",118,"^39","^40"],"~$mark-as-group!",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",12,"^8",7,"^9",12,"^:",21,"^2W",["^1?",["^2X",["^1?",[["^3>"]]]]]],"^M","~$devtools.formatters.templating/mark-as-group!","^6","devtools/formatters/templating.cljs","^:",21,"^34",["^1?",[["^3>"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",12,"^9",12,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3>"]]]]]],"~$get-surrogate-target",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",82,"^8",7,"^9",82,"^:",27,"^2W",["^1?",["^2X",["^1?",[["^3Q"]]]]]],"^M","~$devtools.formatters.templating/get-surrogate-target","^6","devtools/formatters/templating.cljs","^:",27,"^34",["^1?",[["^3Q"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",82,"^3;","^3:","^9",82,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3Q"]]]]]],"~$get-surrogate-start-index",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",94,"^8",7,"^9",94,"^:",32,"^2W",["^1?",["^2X",["^1?",[["^3Q"]]]]]],"^M","~$devtools.formatters.templating/get-surrogate-start-index","^6","devtools/formatters/templating.cljs","^:",32,"^34",["^1?",[["^3Q"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",94,"^3;","^3:","^9",94,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3Q"]]]]]],"~$mark-as-template!",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",19,"^8",7,"^9",19,"^:",24,"^2W",["^1?",["^2X",["^1?",[["^3>"]]]]]],"^M","~$devtools.formatters.templating/mark-as-template!","^6","devtools/formatters/templating.cljs","^:",24,"^34",["^1?",[["^3>"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",19,"^9",19,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3>"]]]]]],"~$pprint-render-stack",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",138,"^8",7,"^9",138,"^:",26,"^2W",["^1?",["^2X",["^1?",[["^3W"]]]]]],"^M","~$devtools.formatters.templating/pprint-render-stack","^6","devtools/formatters/templating.cljs","^:",26,"^34",["^1?",[["^3W"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",138,"^3;","~$js","^9",138,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3W"]]]]]],"~$template?",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",23,"^8",7,"^9",23,"^:",16,"^2W",["^1?",["^2X",["^1?",[["^3>"]]]]]],"^M","~$devtools.formatters.templating/template?","^6","devtools/formatters/templating.cljs","^:",16,"^34",["^1?",[["^3>"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",23,"^3;","^3U","^9",23,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3>"]]]]]],"~$render-special",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",157,"^8",7,"^9",157,"^:",21,"^2W",["^1?",["^2X",["^1?",[["~$name","~$args"]]]]]],"^M","~$devtools.formatters.templating/render-special","^6","devtools/formatters/templating.cljs","^:",21,"^34",["^1?",[["^57","^58"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",157,"^9",157,"^33",2,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^57","^58"]]]]]],"~$print-preview",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",121,"^8",7,"^9",121,"^:",20,"^2W",["^1?",["^2X",["^1?",[["^4B"]]]]]],"^M","~$devtools.formatters.templating/print-preview","^6","devtools/formatters/templating.cljs","^:",20,"^34",["^1?",[["^4B"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",121,"^9",121,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^4B"]]]]]],"~$group?",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",16,"^8",7,"^9",16,"^:",13,"^2W",["^1?",["^2X",["^1?",[["^3>"]]]]]],"^M","~$devtools.formatters.templating/group?","^6","devtools/formatters/templating.cljs","^:",13,"^34",["^1?",[["^3>"]]],"^37",null,"^35",["^1?",[null,null]],"^8",1,"^31",false,"^7",16,"^3;","^3U","^9",16,"^33",1,"^3<",true,"^2W",["^1?",["^2X",["^1?",[["^3>"]]]]]],"~$extend-template!",["^ ","^2V",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",66,"^8",7,"^9",66,"^:",23,"^2W",["^1?",["^2X",["^1?",[["^3A","~$&","^58"]]]]],"^30",["^ ","^31",true,"^32",1,"^33",1,"^34",[["^1?",["^3A","^58"]]],"^2W",["^1?",[["^3A","~$&","^58"]]],"^35",["^1?",[null]]]],"^M","~$devtools.formatters.templating/extend-template!","^6","devtools/formatters/templating.cljs","^:",23,"^30",["^ ","^31",true,"^32",1,"^33",1,"^34",[["^1?",["^3A","^58"]]],"^2W",["^1?",[["^3A","~$&","^58"]]],"^35",["^1?",[null]]],"^34",[["^1?",["^3A","^58"]]],"^37",null,"^32",1,"^35",["^1?",[null]],"^8",1,"^31",true,"^38",[["^ ","^32",1,"^31",true,"^39","^3:"]],"^7",66,"^3;","^3:","^9",66,"^33",1,"^3<",true,"^2W",["^1?",[["^3A","~$&","^58"]]]]],"^12",["^ ","^F","^F","^V","^V"],"~:cljs.analyzer/constants",["^ ","^10",["^L",["~:nil-style","~:else","~:nil-label","~:span"]],"~:order",["^5D","^5A","^5C","^5B"]],"^1C",["^ ","^12",["^L",[]],"^11",["^L",[]]],"^1D",["^ "],"^1E",["^W","^V","^[","^U","^X","^S","^T","^Z"]],"^P","^N","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1S",[["^5H","~:static-fns"],true,["^5H","~:elide-asserts"],false,["^5H","~:optimize-constants"],null,["^5H","^1J"],null,["^5H","~:external-config"],null,["^5H","~:tooling-config"],null,["^5H","~:emit-constants"],null,["^5H","~:load-tests"],null,["^5H","~:infer-externs"],true,["^5H","^1L"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5H","~:fn-invoke-direct"],null,["^5H","~:source-map"],"/dev/null"]]]