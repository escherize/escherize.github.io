["^ ","~:output",["^ ","~:js","goog.provide('re_frame.trace');\ngoog.require('cljs.core');\ngoog.require('re_frame.interop');\ngoog.require('re_frame.loggers');\ngoog.require('goog.functions');\nre_frame.trace.id = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\nre_frame.trace._STAR_current_trace_STAR_ = null;\nre_frame.trace.reset_tracing_BANG_ = (function re_frame$trace$reset_tracing_BANG_(){\nreturn cljs.core.reset_BANG_(re_frame.trace.id,(0));\n});\n\n/** @define {boolean} */\ngoog.define(\"re_frame.trace.trace_enabled_QMARK_\",false);\n/**\n * See https://groups.google.com/d/msg/clojurescript/jk43kmYiMhA/IHglVr_TPdgJ for more details\n */\nre_frame.trace.is_trace_enabled_QMARK_ = (function re_frame$trace$is_trace_enabled_QMARK_(){\nreturn re_frame.trace.trace_enabled_QMARK_;\n});\nre_frame.trace.trace_cbs = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nif((typeof re_frame !== 'undefined') && (typeof re_frame.trace !== 'undefined') && (typeof re_frame.trace.traces !== 'undefined')){\n} else {\nre_frame.trace.traces = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\n}\nif((typeof re_frame !== 'undefined') && (typeof re_frame.trace !== 'undefined') && (typeof re_frame.trace.next_delivery !== 'undefined')){\n} else {\nre_frame.trace.next_delivery = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\n}\n/**\n * Registers a tracing callback function which will receive a collection of one or more traces.\n *   Will replace an existing callback function if it shares the same key.\n */\nre_frame.trace.register_trace_cb = (function re_frame$trace$register_trace_cb(key,f){\nif(re_frame.trace.trace_enabled_QMARK_){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frame.trace.trace_cbs,cljs.core.assoc,key,f);\n} else {\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Tracing is not enabled. Please set {\\\"re_frame.trace.trace_enabled_QMARK_\\\" true} in :closure-defines. See: https://github.com/Day8/re-frame-10x#installation.\"], 0));\n}\n});\nre_frame.trace.remove_trace_cb = (function re_frame$trace$remove_trace_cb(key){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.trace_cbs,cljs.core.dissoc,key);\n\nreturn null;\n});\nre_frame.trace.next_id = (function re_frame$trace$next_id(){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(re_frame.trace.id,cljs.core.inc);\n});\nre_frame.trace.start_trace = (function re_frame$trace$start_trace(p__26600){\nvar map__26601 = p__26600;\nvar map__26601__$1 = (((((!((map__26601 == null))))?(((((map__26601.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__26601.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__26601):map__26601);\nvar operation = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26601__$1,new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310));\nvar op_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26601__$1,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668));\nvar tags = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26601__$1,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977));\nvar child_of = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26601__$1,new cljs.core.Keyword(null,\"child-of\",\"child-of\",-903376662));\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),re_frame.trace.next_id(),new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),operation,new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),op_type,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),tags,new cljs.core.Keyword(null,\"child-of\",\"child-of\",-903376662),(function (){var or__4131__auto__ = child_of;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_);\n}\n})(),new cljs.core.Keyword(null,\"start\",\"start\",-355208981),re_frame.interop.now()], null);\n});\nre_frame.trace.debounce_time = (50);\nre_frame.trace.debounce = (function re_frame$trace$debounce(f,interval){\nreturn goog.functions.debounce(f,interval);\n});\nre_frame.trace.schedule_debounce = re_frame.trace.debounce((function re_frame$trace$tracing_cb_debounced(){\nvar seq__26603_26647 = cljs.core.seq(cljs.core.deref(re_frame.trace.trace_cbs));\nvar chunk__26604_26648 = null;\nvar count__26605_26649 = (0);\nvar i__26606_26650 = (0);\nwhile(true){\nif((i__26606_26650 < count__26605_26649)){\nvar vec__26617_26654 = chunk__26604_26648.cljs$core$IIndexed$_nth$arity$2(null,i__26606_26650);\nvar k_26655 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26617_26654,(0),null);\nvar cb_26656 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26617_26654,(1),null);\ntry{var G__26621_26657 = cljs.core.deref(re_frame.trace.traces);\n(cb_26656.cljs$core$IFn$_invoke$arity$1 ? cb_26656.cljs$core$IFn$_invoke$arity$1(G__26621_26657) : cb_26656.call(null,G__26621_26657));\n}catch (e26620){var e_26658 = e26620;\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Error thrown from trace cb\",k_26655,\"while storing\",cljs.core.deref(re_frame.trace.traces),e_26658], 0));\n}\n\nvar G__26659 = seq__26603_26647;\nvar G__26660 = chunk__26604_26648;\nvar G__26661 = count__26605_26649;\nvar G__26662 = (i__26606_26650 + (1));\nseq__26603_26647 = G__26659;\nchunk__26604_26648 = G__26660;\ncount__26605_26649 = G__26661;\ni__26606_26650 = G__26662;\ncontinue;\n} else {\nvar temp__5720__auto___26664 = cljs.core.seq(seq__26603_26647);\nif(temp__5720__auto___26664){\nvar seq__26603_26666__$1 = temp__5720__auto___26664;\nif(cljs.core.chunked_seq_QMARK_(seq__26603_26666__$1)){\nvar c__4550__auto___26667 = cljs.core.chunk_first(seq__26603_26666__$1);\nvar G__26668 = cljs.core.chunk_rest(seq__26603_26666__$1);\nvar G__26669 = c__4550__auto___26667;\nvar G__26670 = cljs.core.count(c__4550__auto___26667);\nvar G__26671 = (0);\nseq__26603_26647 = G__26668;\nchunk__26604_26648 = G__26669;\ncount__26605_26649 = G__26670;\ni__26606_26650 = G__26671;\ncontinue;\n} else {\nvar vec__26622_26672 = cljs.core.first(seq__26603_26666__$1);\nvar k_26673 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26622_26672,(0),null);\nvar cb_26674 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26622_26672,(1),null);\ntry{var G__26626_26675 = cljs.core.deref(re_frame.trace.traces);\n(cb_26674.cljs$core$IFn$_invoke$arity$1 ? cb_26674.cljs$core$IFn$_invoke$arity$1(G__26626_26675) : cb_26674.call(null,G__26626_26675));\n}catch (e26625){var e_26676 = e26625;\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Error thrown from trace cb\",k_26673,\"while storing\",cljs.core.deref(re_frame.trace.traces),e_26676], 0));\n}\n\nvar G__26677 = cljs.core.next(seq__26603_26666__$1);\nvar G__26678 = null;\nvar G__26679 = (0);\nvar G__26680 = (0);\nseq__26603_26647 = G__26677;\nchunk__26604_26648 = G__26678;\ncount__26605_26649 = G__26679;\ni__26606_26650 = G__26680;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn cljs.core.reset_BANG_(re_frame.trace.traces,cljs.core.PersistentVector.EMPTY);\n}),re_frame.trace.debounce_time);\nre_frame.trace.run_tracing_callbacks_BANG_ = (function re_frame$trace$run_tracing_callbacks_BANG_(now){\nif(((cljs.core.deref(re_frame.trace.next_delivery) - (25)) < now)){\n(re_frame.trace.schedule_debounce.cljs$core$IFn$_invoke$arity$0 ? re_frame.trace.schedule_debounce.cljs$core$IFn$_invoke$arity$0() : re_frame.trace.schedule_debounce.call(null));\n\nreturn cljs.core.reset_BANG_(re_frame.trace.next_delivery,(now + re_frame.trace.debounce_time));\n} else {\nreturn null;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Tracing for re-frame.\n  Alpha quality, subject to change/break at any time.","~:file","re_frame/trace.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$finish-trace","~$re-frame.trace","~$with-trace","^G","~$merge-trace!","^G"],"~:excludes",["~#set",[]],"~:macros",["^ ","^H",["^ ","~:arglists",["~#list",[[["^ ","~:keys",["~$operation","~$op-type","~$tags","~$child-of"],"~:as","~$trace-opts"],"~$&","~$body"]]],"^6","Create a trace inside the scope of the with-trace macro\n\n          Common keys for trace-opts\n          :op-type - what kind of operation is this? e.g. :sub/create, :render.\n          :operation - identifier for the operation, for a subscription it would be the subscription keyword\n          :tags - a map of arbitrary kv pairs","^8",109,"^9",2,"^7","re_frame/trace.cljc","~:name","~$re-frame.trace/with-trace","~:ns","^G","~:macro",true],"^F",["^ ","^M",["^N",[["~$trace"]]],"^8",100,"^9",3,"^7","re_frame/trace.cljc","^W","~$re-frame.trace/finish-trace","^Y","^G","^Z",true],"^I",["^ ","^M",["^N",[["~$m"]]],"^8",123,"^9",3,"^7","re_frame/trace.cljc","^W","~$re-frame.trace/merge-trace!","^Y","^G","^Z",true]],"^W","^G","~:op","^Y","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^15","~$interop","^15","~$re-frame.loggers","^17","~$goog.functions","^18","~$cljs.core","^19","~$goog","^1:"],"~:seen",["^K",["~:require","~:require-macros"]],"~:uses",["^ ","~$console","^17"],"^1=",["^ ","~$net.cgrand.macrovich","^1@","~$macros","^1@","^G","^G","^19","^19"],"~:form",["^N",["~$ns","^G","Tracing for re-frame.\n  Alpha quality, subject to change/break at any time.",["^N",["^1=",["^1@","^T","^1A"],["^G","~:refer",["^F","^H","^I"]]]],["^N",["^1<",["^15","^T","^16"],["^17","^1D",["^1?"]],["^18"]]]]],"~:flags",["^ ","^1=",["^K",[]],"^1<",["^K",[]]],"~:js-deps",["^ "],"~:deps",["^1:","^19","^15","^17","^18"]],"^Y","^G","~:resource-id",["~:shadow.build.classpath/resource","re_frame/trace.cljc"],"~:compiled-at",1567403427001,"~:resource-name","re_frame/trace.cljc","~:warnings",[],"~:source","(ns re-frame.trace\n  \"Tracing for re-frame.\n  Alpha quality, subject to change/break at any time.\"\n  #?(:cljs (:require-macros [net.cgrand.macrovich :as macros]\n                            [re-frame.trace :refer [finish-trace with-trace merge-trace!]]))\n  (:require [re-frame.interop :as interop]\n            [re-frame.loggers :refer [console]]\n            #?(:clj [net.cgrand.macrovich :as macros])\n            #?(:cljs [goog.functions])))\n\n(def id (atom 0))\n(def ^:dynamic *current-trace* nil)\n\n(defn reset-tracing! []\n  (reset! id 0))\n\n#?(:cljs (goog-define trace-enabled? false)\n   :clj  (def ^boolean trace-enabled? false))\n\n(defn ^boolean is-trace-enabled?\n  \"See https://groups.google.com/d/msg/clojurescript/jk43kmYiMhA/IHglVr_TPdgJ for more details\"\n  ;; We can remove this extra step of type hinting indirection once our minimum CLJS version includes\n  ;; https://dev.clojure.org/jira/browse/CLJS-1439\n  ;; r1.10.63 is the first version with this:\n  ;; https://github.com/clojure/clojurescript/commit/9ec796d791b1b2bd613af2f62cdecfd25caa6482\n  []\n  trace-enabled?)\n\n(def trace-cbs (atom {}))\n(defonce traces (atom []))\n(defonce next-delivery (atom 0))\n\n(defn register-trace-cb\n  \"Registers a tracing callback function which will receive a collection of one or more traces.\n  Will replace an existing callback function if it shares the same key.\"\n  [key f]\n  (if trace-enabled?\n    (swap! trace-cbs assoc key f)\n    (console :warn \"Tracing is not enabled. Please set {\\\"re_frame.trace.trace_enabled_QMARK_\\\" true} in :closure-defines. See: https://github.com/Day8/re-frame-10x#installation.\")))\n\n(defn remove-trace-cb [key]\n  (swap! trace-cbs dissoc key)\n  nil)\n\n(defn next-id [] (swap! id inc))\n\n(defn start-trace [{:keys [operation op-type tags child-of]}]\n  {:id        (next-id)\n   :operation operation\n   :op-type   op-type\n   :tags      tags\n   :child-of  (or child-of (:id *current-trace*))\n   :start     (interop/now)})\n\n;; On debouncing\n;;\n;; We debounce delivering traces to registered cbs so that\n;; we can deliver them in batches. This aids us in efficiency\n;; but also importantly lets us avoid slowing down the host\n;; application by running any trace code in the critical path.\n;;\n;; We add a lightweight check on top of goog.functions/debounce\n;; to avoid constant setting and cancelling of timeouts. This\n;; means that we will deliver traces between 10-50 ms from the\n;; last trace being created, which still achieves our goals.\n\n(def debounce-time 50)\n\n(defn debounce [f interval]\n  #?(:cljs (goog.functions/debounce f interval)\n     :clj  (f)))\n\n(def schedule-debounce\n  (debounce\n    (fn tracing-cb-debounced []\n      (doseq [[k cb] @trace-cbs]\n        (try (cb @traces)\n             #?(:clj (catch Exception e\n                       (console :error \"Error thrown from trace cb\" k \"while storing\" @traces e)))\n             #?(:cljs (catch :default e\n                        (console :error \"Error thrown from trace cb\" k \"while storing\" @traces e)))))\n      (reset! traces []))\n    debounce-time))\n\n(defn run-tracing-callbacks! [now]\n  ;; Optimised debounce, we only re-debounce\n  ;; if we are close to delivery time\n  ;; to avoid constant setting and cancelling\n  ;; timeouts.\n\n  ;; If we are within 25 ms of next delivery\n  (when (< (- @next-delivery 25) now)\n    (schedule-debounce)\n    ;; The next-delivery time is not perfectly accurate\n    ;; as scheduling the debounce takes some time, but\n    ;; it's good enough for our purposes here.\n    (reset! next-delivery (+ now debounce-time))))\n\n(macros/deftime\n  (defmacro finish-trace [trace]\n     `(when (is-trace-enabled?)\n        (let [end#      (interop/now)\n              duration# (- end# (:start ~trace))]\n          (swap! traces conj (assoc ~trace\n                               :duration duration#\n                               :end (interop/now)))\n          (run-tracing-callbacks! end#))))\n\n (defmacro with-trace\n     \"Create a trace inside the scope of the with-trace macro\n\n          Common keys for trace-opts\n          :op-type - what kind of operation is this? e.g. :sub/create, :render.\n          :operation - identifier for the operation, for a subscription it would be the subscription keyword\n          :tags - a map of arbitrary kv pairs\"\n     [{:keys [operation op-type tags child-of] :as trace-opts} & body]\n     `(if (is-trace-enabled?)\n        (binding [*current-trace* (start-trace ~trace-opts)]\n          (try ~@body\n               (finally (finish-trace *current-trace*))))\n        (do ~@body)))\n\n  (defmacro merge-trace! [m]\n     ;; Overwrite keys in tags, and all top level keys.\n     `(when (is-trace-enabled?)\n        (let [new-trace# (-> (update *current-trace* :tags merge (:tags ~m))\n                             (merge (dissoc ~m :tags)))]\n          (set! *current-trace* new-trace#))\n        nil)))\n","~:reader-features",["^K",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["re-frame.trace/id","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","re-frame.trace/*current-trace*","re-frame.trace/reset-tracing!","cljs.core/reset!","goog/define","re-frame.trace/is-trace-enabled?","re-frame.trace/trace-enabled?","re-frame.trace/trace-cbs","js/re-frame","js/re-frame.trace","js/re-frame.trace.traces","re-frame.trace/traces","js/re-frame.trace.next-delivery","re-frame.trace/next-delivery","re-frame.trace/register-trace-cb","key","f","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic","re-frame.trace/remove-trace-cb","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/dissoc","re-frame.trace/next-id","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/inc","p__26600","map__26601","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","re-frame.trace/start-trace","operation","op-type","tags","child-of","or__4131__auto__","re-frame.interop/now","re-frame.trace/debounce-time","re-frame.trace/debounce","interval","goog.functions/debounce","re-frame.trace/schedule-debounce","seq__26603","cljs.core/seq","cljs.core/deref","chunk__26604","count__26605","i__26606","vec__26617","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","temp__5720__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__26622","cljs.core/first","cljs.core/next","k","cb","e26620","e26625","G__26621","G__26626","e","re-frame.trace/run-tracing-callbacks!","now"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1553268784000,1553268784000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^K",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1I","reagent/impl/batching.cljs"],[1543639330000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^19","~$reagent.debug","~$reagent.interop","~$reagent.impl.util","~$clojure.string"]]],["^1I","goog/dom/tagname.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","~$goog.dom.HtmlElement"]]],["^Z","^19"],[1553268783000],["^1I","goog/math/math.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","~$goog.array","~$goog.asserts"]]],["^1I","goog/labs/useragent/browser.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^27","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1I","re_frame/loggers.cljc"],[1567403372000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^19","~$clojure.set"]]],["^Z","^22"],[1543639330000],["^1I","goog/array/array.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^28"]]],["^1V","node_modules/prop-types/checkPropTypes.js"],[1553268784000,1553268784000,1549836454000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1[","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1I","reagent/impl/util.cljs"],[1543639330000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^19","^22","^23","^25"]]],["^Z","^1@"],[1567403372000],["^1V","node_modules/fbjs/lib/emptyFunction.js"],[1553268784000,1553268784000,1528785402000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1["]]],["^1I","goog/debug/error.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:"]]],["^1V","node_modules/fbjs/lib/emptyObject.js"],[1553268784000,1553268784000,1528785402000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1["]]],["^1I","goog/dom/nodetype.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:"]]],["^Z","~$reagent.core"],[1543639330000],["^1V","node_modules/scheduler/cjs/scheduler.development.js"],[1553268784000,1553268784000,499162500000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1["]]],["^1I","reagent/ratom.cljs"],[1543639330000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^19","^24","^22","~$reagent.impl.batching","^2<"]]],["^1V","node_modules/scheduler/cjs/scheduler.production.min.js"],[1553268784000,1553268784000,499162500000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1["]]],["^1I","re_frame/interop.cljs"],[1567403372000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^19","~$goog.async.nextTick","^2>","~$reagent.ratom"]]],["^1V","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1553268784000,1553268784000,499162500000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1["]]],["^1V","node_modules/create-react-class/factory.js"],[1553268784000,1553268784000,1517346959000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1[","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning"]]],["^1V","node_modules/react/index.js"],[1553268784000,1553268784000,499162500000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1[","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1I","shadow/js.js"],[1553268784000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:"]]],["^1I","goog/object/object.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:"]]],["^1I","reagent/impl/template.cljs"],[1543639330000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^19","^@","^25","~$clojure.walk","^24","~$reagent.impl.component","^2?","^2A","^23","^22"]]],["^1V","node_modules/react-dom/cjs/react-dom.production.min.js"],[1553268784000,1553268784000,499162500000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1[","^@","^2B","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1553268784000,1553268783000],["^1V","node_modules/react/cjs/react.development.js"],[1553268784000,1553268784000,499162500000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1[","^2B","~$module$node_modules$prop_types$checkPropTypes"]]],["^Z","^2A"],[1543639330000],["^1I","goog/math/long.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^28","~$goog.reflect"]]],["^Z","^23"],[1543639330000],["^1I","goog/string/internal.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:"]]],["^1V","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1553268784000,1553268784000,499162500000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1["]]],["^1V","node_modules/fbjs/lib/warning.js"],[1553268784000,1553268784000,1528785401000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1[","~$module$node_modules$fbjs$lib$emptyFunction"]]],["^1I","goog/functions/functions.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:"]]],["^1I","reagent/impl/component.cljs"],[1543639330000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^19","^B","^@","^24","^2?","^2A","^23","^22"]]],["^1I","clojure/walk.cljs"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^19"]]],["^1I","goog/structs/map.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1V","node_modules/scheduler/index.js"],[1553268784000,1553268784000,499162500000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1[","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1I","goog/labs/useragent/engine.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^27","^29","~$goog.string"]]],["^1I","goog/asserts/asserts.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1I","goog/uri/uri.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^27","^28","^2S","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1V","node_modules/object-assign/index.js"],[1553268784000,1553268784000,1484580833000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1["]]],["^1I","goog/base.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",[]]],["^1I","goog/structs/structs.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^27","^2:"]]],["^1I","clojure/string.cljs"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^19","^2S","~$goog.string.StringBuffer"]]],["^1V","node_modules/create-react-class/index.js"],[1553268784000,1553268784000,1517346956000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1[","^@","~$module$node_modules$create_react_class$factory"]]],["^1V","node_modules/react/cjs/react.production.min.js"],[1553268784000,1553268784000,499162500000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1[","^2B"]]],["^1I","goog/debug/entrypointregistry.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^28"]]],["^1I","goog/string/string.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^2;"]]],["^1I","goog/reflect/reflect.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:"]]],["^1I","goog/labs/useragent/util.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^2;"]]],["^1I","reagent/core.cljs"],[1543639330000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^19","^@","~$reagent.impl.template","^2I","^24","^2?","^2A","^22","^23","~$reagent.dom"]]],["^1I","goog/string/stringbuffer.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:"]]],["^1I","goog/iter/iter.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^27","^28","^18","~$goog.math"]]],["^1I","goog/async/nexttick.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^18","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"]]],["^1I","reagent/dom.cljs"],[1543639330000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^19","^D","^24","^31","^2?","^2A","^22","^23"]]],["^1V","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1553268784000,1553268784000,1549571078000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1["]]],["^1I","reagent/interop.cljs"],[1543639330000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^19"]]],["^1I","goog/dom/htmlelement.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:"]]],["^1I","cljs/core.cljs"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["~$goog.math.Long","~$goog.math.Integer","^2S","^2:","^27","~$goog.Uri","^2["]]],["^1I","reagent/debug.cljs"],[1543639330000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^19"]]],["^Z","^G"],[1567403372000],["^1I","goog/math/integer.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:"]]],["^1V","node_modules/scheduler/tracing.js"],[1553268784000,1553268784000,499162500000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1[","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^1V","node_modules/react-dom/cjs/react-dom.development.js"],[1553268784000,1553268784000,499162500000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1[","^@","^2B","^2L","^2J","~$module$node_modules$scheduler$tracing"]]],["^1I","clojure/set.cljs"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^19"]]],["^1I","goog/uri/utils.js"],[1553268783000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^27","^28","^2S"]]],["^1V","node_modules/fbjs/lib/invariant.js"],[1553268784000,1553268784000,1528785400000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1["]]],["^1I","re_frame/trace.cljc"],[1567403372000,"^1W",["^ ","^1X",null,"^1Y",["^K",[]],"^1Z",["^1:","^19","^15","^17","^18"]]]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Tracing for re-frame.\n  Alpha quality, subject to change/break at any time.","^7","re_frame/trace.cljc","^8",1,"^9",5,"^:",1,"^;",19],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D"],"^E",["^ ","^F","^G","^H","^G","^I","^G"],"^J",["^K",[]],"^L",["^ ","^H",["^ ","^M",["^N",[[["^ ","^O",["^P","^Q","^R","^S"],"^T","^U"],"~$&","^V"]]],"^6","Create a trace inside the scope of the with-trace macro\n\n          Common keys for trace-opts\n          :op-type - what kind of operation is this? e.g. :sub/create, :render.\n          :operation - identifier for the operation, for a subscription it would be the subscription keyword\n          :tags - a map of arbitrary kv pairs","^8",109,"^9",2,"^7","re_frame/trace.cljc","^W","^X","^Y","^G","^Z",true],"^F",["^ ","^M",["^N",[["^["]]],"^8",100,"^9",3,"^7","re_frame/trace.cljc","^W","^10","^Y","^G","^Z",true],"^I",["^ ","^M",["^N",[["~$m"]]],"^8",123,"^9",3,"^7","re_frame/trace.cljc","^W","^11","^Y","^G","^Z",true]],"^W","^G","^13",null,"^14",["^ ","^15","^15","^16","^15","^17","^17","^18","^18","^19","^19","^1:","^1:"],"^1;",["^K",["^1<","^1="]],"^1>",["^ ","^1?","^17"],"~:defs",["^ ","~$reset-tracing!",["^ ","~:protocol-inline",null,"^5",["^ ","^7","re_frame/trace.cljc","^8",14,"^9",7,"^:",14,"^;",21,"^M",["^N",["~$quote",["^N",[[]]]]]],"^W","~$re-frame.trace/reset-tracing!","^7","re_frame/trace.cljc","^;",21,"~:method-params",["^N",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^9",1,"~:variadic?",false,"^8",14,"~:ret-tag",["^K",[null,"~$any"]],"^:",14,"~:max-fixed-arity",0,"~:fn-var",true,"^M",["^N",["^3B",["^N",[[]]]]]],"~$next-delivery",["^ ","^W","~$re-frame.trace/next-delivery","^7","re_frame/trace.cljc","^8",31,"^9",1,"^:",31,"^;",23,"^5",["^ ","^7","re_frame/trace.cljc","^8",31,"^9",10,"^:",31,"^;",23],"~:tag","~$cljs.core/Atom"],"~$run-tracing-callbacks!",["^ ","^3A",null,"^5",["^ ","^7","re_frame/trace.cljc","^8",85,"^9",7,"^:",85,"^;",29,"^M",["^N",["^3B",["^N",[["~$now"]]]]]],"^W","~$re-frame.trace/run-tracing-callbacks!","^7","re_frame/trace.cljc","^;",29,"^3D",["^N",[["^3Q"]]],"^3E",null,"^3F",["^N",[null,null]],"^9",1,"^3G",false,"^8",85,"^3H",["^K",[null,"^3I","~$clj-nil"]],"^:",85,"^3J",1,"^3K",true,"^M",["^N",["^3B",["^N",[["^3Q"]]]]]],"~$trace-cbs",["^ ","^W","~$re-frame.trace/trace-cbs","^7","re_frame/trace.cljc","^8",29,"^9",1,"^:",29,"^;",15,"^5",["^ ","^7","re_frame/trace.cljc","^8",29,"^9",6,"^:",29,"^;",15],"^3N","^3O"],"~$register-trace-cb",["^ ","^3A",null,"^5",["^ ","^7","re_frame/trace.cljc","^8",33,"^9",7,"^:",33,"^;",24,"^M",["^N",["^3B",["^N",[["~$key","~$f"]]]]],"^6","Registers a tracing callback function which will receive a collection of one or more traces.\n  Will replace an existing callback function if it shares the same key."],"^W","~$re-frame.trace/register-trace-cb","^7","re_frame/trace.cljc","^;",24,"^3D",["^N",[["^3W","~$f"]]],"^3E",null,"^3F",["^N",[null,null]],"^9",1,"^3G",false,"^8",33,"^3H",["^K",[null,"^3I"]],"^:",33,"^3J",2,"^3K",true,"^M",["^N",["^3B",["^N",[["^3W","~$f"]]]]],"^6","Registers a tracing callback function which will receive a collection of one or more traces.\n  Will replace an existing callback function if it shares the same key."],"~$next-id",["^ ","^3A",null,"^5",["^ ","^7","re_frame/trace.cljc","^8",45,"^9",7,"^:",45,"^;",14,"^M",["^N",["^3B",["^N",[[]]]]]],"^W","~$re-frame.trace/next-id","^7","re_frame/trace.cljc","^;",14,"^3D",["^N",[[]]],"^3E",null,"^3F",["^N",[null,null]],"^9",1,"^3G",false,"^8",45,"^3H",["^K",[null,"^3I"]],"^:",45,"^3J",0,"^3K",true,"^M",["^N",["^3B",["^N",[[]]]]]],"~$debounce",["^ ","^3A",null,"^5",["^ ","^7","re_frame/trace.cljc","^8",69,"^9",7,"^:",69,"^;",15,"^M",["^N",["^3B",["^N",[["~$f","~$interval"]]]]]],"^W","~$re-frame.trace/debounce","^7","re_frame/trace.cljc","^;",15,"^3D",["^N",[["~$f","^40"]]],"^3E",null,"^3F",["^N",[null,null]],"^9",1,"^3G",false,"^8",69,"^3H","^3I","^:",69,"^3J",2,"^3K",true,"^M",["^N",["^3B",["^N",[["~$f","^40"]]]]]],"~$is-trace-enabled?",["^ ","^3A",null,"^5",["^ ","^7","re_frame/trace.cljc","^8",20,"^9",16,"^:",20,"^;",33,"^3N","~$boolean","^M",["^N",["^3B",["^N",[[]]]]],"^6","See https://groups.google.com/d/msg/clojurescript/jk43kmYiMhA/IHglVr_TPdgJ for more details"],"^W","~$re-frame.trace/is-trace-enabled?","^7","re_frame/trace.cljc","^;",33,"^3D",["^N",[[]]],"^3E",null,"^3F",["^N",[null,null]],"^9",1,"^3G",false,"^8",20,"^3H","^43","^:",20,"^3J",0,"^3N","^43","^3K",true,"^M",["^N",["^3B",["^N",[[]]]]],"^6","See https://groups.google.com/d/msg/clojurescript/jk43kmYiMhA/IHglVr_TPdgJ for more details"],"~$traces",["^ ","^W","~$re-frame.trace/traces","^7","re_frame/trace.cljc","^8",30,"^9",1,"^:",30,"^;",16,"^5",["^ ","^7","re_frame/trace.cljc","^8",30,"^9",10,"^:",30,"^;",16],"^3N","^3O"],"~$debounce-time",["^ ","^W","~$re-frame.trace/debounce-time","^7","re_frame/trace.cljc","^8",67,"^9",1,"^:",67,"^;",19,"^5",["^ ","^7","re_frame/trace.cljc","^8",67,"^9",6,"^:",67,"^;",19],"^3N","~$number"],"~$schedule-debounce",["^ ","^W","~$re-frame.trace/schedule-debounce","^7","re_frame/trace.cljc","^8",73,"^9",1,"^:",73,"^;",23,"^5",["^ ","^7","re_frame/trace.cljc","^8",73,"^9",6,"^:",73,"^;",23],"^3N","^3I"],"~$id",["^ ","^W","~$re-frame.trace/id","^7","re_frame/trace.cljc","^8",11,"^9",1,"^:",11,"^;",8,"^5",["^ ","^7","re_frame/trace.cljc","^8",11,"^9",6,"^:",11,"^;",8],"^3N","^3O"],"~$*current-trace*",["^ ","^5",["^ ","^7","re_frame/trace.cljc","^8",12,"^9",16,"^:",12,"^;",31,"~:dynamic",true],"^W","~$re-frame.trace/*current-trace*","^7","re_frame/trace.cljc","^;",31,"^9",1,"^4?",true,"^8",12,"^:",12,"^3N","^3S"],"~$remove-trace-cb",["^ ","^3A",null,"^5",["^ ","^7","re_frame/trace.cljc","^8",41,"^9",7,"^:",41,"^;",22,"^M",["^N",["^3B",["^N",[["^3W"]]]]]],"^W","~$re-frame.trace/remove-trace-cb","^7","re_frame/trace.cljc","^;",22,"^3D",["^N",[["^3W"]]],"^3E",null,"^3F",["^N",[null,null]],"^9",1,"^3G",false,"^8",41,"^3H","^3S","^:",41,"^3J",1,"^3K",true,"^M",["^N",["^3B",["^N",[["^3W"]]]]]],"~$start-trace",["^ ","^3A",null,"^5",["^ ","^7","re_frame/trace.cljc","^8",47,"^9",7,"^:",47,"^;",18,"^M",["^N",["^3B",["^N",[[["^ ","^O",["^P","^Q","^R","^S"]]]]]]]],"^W","~$re-frame.trace/start-trace","^7","re_frame/trace.cljc","^;",18,"^3D",["^N",[["~$p__26600"]]],"^3E",null,"^3F",["^N",[null,null]],"^9",1,"^3G",false,"^8",47,"^3H","~$cljs.core/IMap","^:",47,"^3J",1,"^3K",true,"^M",["^N",["^3B",["^N",[[["^ ","^O",["^P","^Q","^R","^S"]]]]]]]],"~$trace-enabled?",["^ ","^5",["^ ","^7","re_frame/trace.cljc","^8",17,"^9",23,"^:",17,"^;",37,"^3N","^43","~:declared",true],"^W","~$re-frame.trace/trace-enabled?","^7","re_frame/trace.cljc","^;",37,"^9",10,"^8",17,"^4H",true,"^:",17,"^3N","^43"]],"^1=",["^ ","^1@","^1@","^1A","^1@","^G","^G","^19","^19"],"~:cljs.analyzer/constants",["^ ","^1;",["^K",["~:tags","~:warn","~:child-of","~:operation","~:start","~:id","~:error","~:op-type"]],"~:order",["^4L","^4N","^4R","^4K","^4M","^4P","^4O","^4Q"]],"^1E",["^ ","^1=",["^K",[]],"^1<",["^K",[]]],"^1F",["^ "],"^1G",["^1:","^19","^15","^17","^18"]],"^Y","^G","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1U",[["^4V","~:static-fns"],true,["^4V","~:elide-asserts"],false,["^4V","~:optimize-constants"],null,["^4V","^1L"],null,["^4V","~:external-config"],null,["^4V","~:tooling-config"],null,["^4V","~:emit-constants"],null,["^4V","~:load-tests"],null,["^4V","~:infer-externs"],true,["^4V","^1N"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4V","~:fn-invoke-direct"],null,["^4V","~:source-map"],"/dev/null"]]]